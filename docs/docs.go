// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/albums": {
            "get": {
                "description": "Get a list of albums with optional pagination filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albums"
                ],
                "summary": "Get albums",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of albums",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Album"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/albums/search": {
            "get": {
                "description": "Search albums by query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albums"
                ],
                "summary": "Search albums",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of albums",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Album"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid query",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/albums/{id}": {
            "get": {
                "description": "Get an album by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albums"
                ],
                "summary": "Get album by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Album ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Album details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.Album"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid album ID",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/albums/{id}/like": {
            "post": {
                "description": "Like an album for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albums"
                ],
                "summary": "Like an album",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Album ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Like request",
                        "name": "likeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.AlbumLikeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Album liked/unliked",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.Message"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid album ID",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Album not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/albums/{id}/tracks": {
            "get": {
                "description": "Get a list of tracks by a specific album with optional pagination filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Get tracks by album ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Album ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tracks by album",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Track"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid album ID or filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Album not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/label": {
            "put": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Updates a label by adding or removing users. Only accessible by administrators.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "Update a label",
                "parameters": [
                    {
                        "description": "Label update information containing labelID, users to add, and users to remove",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.EditLabelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Label edited successfully",
                        "schema": {
                            "$ref": "#/definitions/delivery.Message"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - admin access required",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Creates a new label in the system. Only accessible by administrators.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "Create a new label",
                "parameters": [
                    {
                        "description": "Label information",
                        "name": "label",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.Label"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created label",
                        "schema": {
                            "$ref": "#/definitions/delivery.Label"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - admin access required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/label/album": {
            "post": {
                "security": [
                    {
                        "LabelAuth": []
                    }
                ],
                "description": "Creates a new album with tracks. Only accessible by label members.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "Create a new album",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Album title (max 100 characters)",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Album type (album, single, ep, compilation)",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of artist IDs",
                        "name": "artists_ids",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Album cover image",
                        "name": "thumbnail",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Array of track files",
                        "name": "tracks[]",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Array of track titles corresponding to tracks[]",
                        "name": "track_titles[]",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created album ID",
                        "schema": {
                            "$ref": "#/definitions/delivery.SuccessCreateAlbum"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - user not in label",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIForbiddenErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "LabelAuth": []
                    },
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Removes an album from the label. Accessible by label members for their own label or administrators for any label.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "Delete an album",
                "parameters": [
                    {
                        "description": "Album deletion request containing labelID and albumID",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.DeleteAlbumRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Album deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/delivery.Message"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input or label ID mismatch",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden - user not in label",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/label/albums": {
            "get": {
                "security": [
                    {
                        "LabelAuth": []
                    }
                ],
                "description": "Retrieves a list of albums associated with the user's label with optional pagination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "Get albums by label ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of albums in the label",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Album"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - user not in label",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIForbiddenErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/label/artist": {
            "put": {
                "security": [
                    {
                        "LabelAuth": []
                    }
                ],
                "description": "Updates an artist's information (name and/or image). Only accessible by label members.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "Edit an existing artist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Artist ID to edit",
                        "name": "artist_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New artist name (required if thumbnail is not provided)",
                        "name": "new_title",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "New artist profile image (required if new_title is not provided, max 6MB)",
                        "name": "thumbnail",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated artist",
                        "schema": {
                            "$ref": "#/definitions/delivery.Artist"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - user not in label",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIForbiddenErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "LabelAuth": []
                    }
                ],
                "description": "Creates a new artist associated with the label. Only accessible by label members.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "Create a new artist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Artist name",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Artist profile image (max 6MB)",
                        "name": "thumbnail",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created artist",
                        "schema": {
                            "$ref": "#/definitions/delivery.Artist"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - user not in label",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIForbiddenErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "LabelAuth": []
                    }
                ],
                "description": "Removes an artist from the label. Only accessible by label members.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "Delete an artist",
                "parameters": [
                    {
                        "description": "Artist deletion request containing title",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.DeleteArtistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/delivery.DeleteArtistRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - user not in label",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIForbiddenErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/label/artists": {
            "get": {
                "security": [
                    {
                        "LabelAuth": []
                    }
                ],
                "description": "Retrieves a list of artists associated with the user's label with optional pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "Get artists in a label",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of artists in the label",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Artist"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - user not in label",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIForbiddenErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/label/{id}": {
            "get": {
                "security": [
                    {
                        "AdminAuth": []
                    }
                ],
                "description": "Retrieves a label by its ID. Only accessible by administrators.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "Get label by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Label ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Label information",
                        "schema": {
                            "$ref": "#/definitions/delivery.Label"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid label ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - admin access required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/artists": {
            "get": {
                "description": "Get a list of artists with optional pagination filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artists"
                ],
                "summary": "Get artists",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of artists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Artist"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/artists/search": {
            "get": {
                "description": "Search artists by query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artists"
                ],
                "summary": "Search artists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of artists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Artist"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid query",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/artists/{id}": {
            "get": {
                "description": "Get detailed information about a specific artist by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artists"
                ],
                "summary": "Get artist by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.ArtistDetailed"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/artists/{id}/albums": {
            "get": {
                "description": "Get a list of albums for a specific artist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albums"
                ],
                "summary": "Get albums by artist ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of albums",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Album"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid artist ID",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/artists/{id}/like": {
            "post": {
                "description": "Like an artist for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artists"
                ],
                "summary": "Like an artist",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Like request",
                        "name": "likeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.ArtistLikeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist liked/unliked",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.Message"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid artist ID",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Artist not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/artists/{id}/tracks": {
            "get": {
                "description": "Get a list of tracks by a specific artist with optional pagination filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Get tracks by artist ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tracks by artist",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Track"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID or filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/check": {
            "get": {
                "description": "Verifies user's session and returns user information if authenticated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Check user authentication",
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.UserToFront"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - session not found or invalid",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticates a user with provided login credentials and returns a session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "User login data",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.LoginData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully authenticated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.UserToFront"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid login data",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Terminates user session and invalidates session cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log out user",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.Message"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - session not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Creates a new user account with provided registration data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.RegisterData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully registered",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.UserToFront"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid registration data",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists": {
            "post": {
                "description": "Create a new playlist with a title and thumbnail image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Create a new playlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Playlist title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Playlist thumbnail image",
                        "name": "thumbnail",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created playlist",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.Playlist"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid form data",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "413": {
                        "description": "Request entity too large",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIRequestEntityTooLargeErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists/me": {
            "get": {
                "description": "Retrieves all playlists accessible to the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Get combined playlists for current user",
                "responses": {
                    "200": {
                        "description": "List of playlists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Playlist"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists/search": {
            "get": {
                "description": "Search playlists by query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Search playlists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of playlists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Playlist"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid query",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists/to-add": {
            "get": {
                "description": "Retrieves all playlists owned by the current user with information about whether the track is already included",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Get playlists available for adding a track",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Track ID to check inclusion status",
                        "name": "trackId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of playlists with track inclusion status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.PlaylistWithIsIncludedTrack"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid track ID",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists/{id}": {
            "get": {
                "description": "Retrieves a specific playlist by its ID with all its details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Get a playlist by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Playlist details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.PlaylistWithIsLiked"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Playlist not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a playlist's title and/or thumbnail",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Update a playlist",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New playlist title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "New playlist thumbnail image",
                        "name": "thumbnail",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated playlist",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.Playlist"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID or form data",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Playlist not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a playlist by its ID (only available to the playlist owner)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Remove a playlist",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Playlist removed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.Message"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - user is not the playlist owner",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIForbiddenErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Playlist not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists/{id}/like": {
            "post": {
                "description": "Like a playlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Like a playlist",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Playlist like request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.PlaylistLikeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Playlist liked/unliked successfully",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID or request body",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Playlist not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists/{id}/tracks": {
            "get": {
                "description": "Get a list of tracks by a specific playlist with optional pagination filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Get playlist tracks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tracks by playlist",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Track"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid playlist ID or filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Playlist not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a track to a specific playlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Add a track to a playlist",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Track information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.AddTrackToPlaylistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Track added successfully",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID or request body",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Playlist or track not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists/{id}/tracks/{trackId}": {
            "delete": {
                "description": "Removes a track from a specific playlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Remove a track from a playlist",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Track ID",
                        "name": "trackId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Track removed successfully",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid IDs",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Playlist or track not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/selection/{selection}": {
            "get": {
                "description": "Get a list of tracks by a specific selection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Get selection tracks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Selection (most-recent, most-liked, most-liked-last-week, most-listened-last-month, top-chart)",
                        "name": "selection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tracks",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Track"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid selection",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/streams/{id}": {
            "put": {
                "description": "updates listening duration at the end of stream",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Update stream duration by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stream ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message that stream was updated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Message"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID or filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIForbiddenErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tracks": {
            "get": {
                "description": "Get a list of tracks with optional pagination filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Get tracks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tracks",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Track"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tracks/search": {
            "get": {
                "description": "Search tracks by query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Search tracks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "query",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tracks",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Track"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid query",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tracks/{id}": {
            "get": {
                "description": "Retrieves a specific track by its ID with detailed information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Get track by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Track details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.TrackDetailed"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tracks/{id}/like": {
            "post": {
                "description": "Like a track for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Like a track",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Is like",
                        "name": "likeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.TrackLikeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Track liked/unliked",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.Message"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid track ID",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Track not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tracks/{id}/stream": {
            "post": {
                "description": "Creates stream for track by id, essentially it means saving track to listening history",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Create stream for track by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID of created stream",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.StreamID"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID or filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/me": {
            "put": {
                "description": "Updates user profile information and privacy settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Change user data",
                "parameters": [
                    {
                        "description": "User data and privacy settings",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.UserChangeSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated user data and privacy settings",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.UserFullData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid request body, validation failed, or user not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the authenticated user's account. Requires valid session cookie and matching user credentials.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID cookie (session_id=...)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User credentials for deletion verification",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.UserDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully deleted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.Message"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Possible errors: invalid request body, validation failed, credentials mismatch, session cookie missing",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error during user deletion",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/me/albums": {
            "get": {
                "description": "Get a list of favorite albums for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albums"
                ],
                "summary": "Get favorite albums",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of favorite albums",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Album"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/me/avatar": {
            "post": {
                "description": "Uploads a new avatar image for a specific user",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Upload user avatar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Avatar image file (max 5MB, image formats only)",
                        "name": "avatar",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link to the uploaded avatar image",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.AvatarURL"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid file or username",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "description": "Retrieves user's profile information and privacy settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user profile data and privacy settings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User data, privacy settings and statistics, -1 - if the statistics field is not allowed to display",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.UserFullData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - username not found in URL or user not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/{username}/artists": {
            "get": {
                "description": "Get a list of favorite artists for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artists"
                ],
                "summary": "Get favorite artists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of favorite artists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Artist"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid username",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/{username}/playlists": {
            "get": {
                "description": "Retrieves all playlists owned by a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Get profile playlists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username of the user",
                        "name": "username",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of playlists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Playlist"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid username",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIUnauthorizedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/me/history": {
            "get": {
                "description": "Retrieves a list of tracks last listened by a specific user with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Get last listened tracks for a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of last listened tracks",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Track"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid username or filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{username}/tracks": {
            "get": {
                "description": "Get a list of favorite tracks for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Get favorite tracks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of favorite tracks",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Track"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid username or filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APINotFoundErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "delivery.APIBadRequestErrorResponse": {
            "description": "API bad request error response structure",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Something went wrong"
                },
                "status": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "delivery.APIForbiddenErrorResponse": {
            "description": "API forbidden error response structure",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Forbidden"
                },
                "status": {
                    "type": "integer",
                    "example": 403
                }
            }
        },
        "delivery.APIInternalServerErrorResponse": {
            "description": "API internal server error response structure",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Something went wrong"
                },
                "status": {
                    "type": "integer",
                    "example": 500
                }
            }
        },
        "delivery.APINotFoundErrorResponse": {
            "description": "API not found error response structure",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Not found"
                },
                "status": {
                    "type": "integer",
                    "example": 404
                }
            }
        },
        "delivery.APIRequestEntityTooLargeErrorResponse": {
            "description": "API request entity too large error response structure",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Request entity too large"
                },
                "status": {
                    "type": "integer",
                    "example": 413
                }
            }
        },
        "delivery.APIResponse": {
            "description": "API response wrapper",
            "type": "object",
            "properties": {
                "body": {},
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "delivery.APIUnauthorizedErrorResponse": {
            "description": "API unauthorized error response structure",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Unauthorized"
                },
                "status": {
                    "type": "integer",
                    "example": 401
                }
            }
        },
        "delivery.AddTrackToPlaylistRequest": {
            "description": "Add track to playlist request structure",
            "type": "object",
            "properties": {
                "track_id": {
                    "type": "integer"
                }
            }
        },
        "delivery.Album": {
            "description": "A music album entity",
            "type": "object",
            "properties": {
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/delivery.AlbumArtist"
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_liked": {
                    "type": "boolean",
                    "example": true
                },
                "release_date": {
                    "type": "string",
                    "example": "2021-01-01"
                },
                "thumbnail_url": {
                    "type": "string",
                    "example": "https://example.com/album.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "Anticyclone"
                },
                "type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/delivery.AlbumType"
                        }
                    ],
                    "example": "album"
                }
            }
        },
        "delivery.AlbumArtist": {
            "description": "An artist associated with an album",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "Inabakumori"
                }
            }
        },
        "delivery.AlbumLikeRequest": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "delivery.AlbumType": {
            "type": "string",
            "enum": [
                "album",
                "ep",
                "compilation",
                "single"
            ],
            "x-enum-varnames": [
                "AlbumTypeAlbum",
                "AlbumTypeEP",
                "AlbumTypeCompilation",
                "AlbumTypeSingle"
            ]
        },
        "delivery.Artist": {
            "description": "A music artist entity",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Inabakumori is a Japanese artist"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_liked": {
                    "type": "boolean",
                    "example": false
                },
                "thumbnail_url": {
                    "type": "string",
                    "example": "https://example.com/artist.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "Inabakumori"
                }
            }
        },
        "delivery.ArtistDetailed": {
            "description": "A detailed music artist entity",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Inabakumori is a Japanese artist"
                },
                "favorites_count": {
                    "type": "integer",
                    "example": 1000
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_liked": {
                    "type": "boolean",
                    "example": false
                },
                "listeners_count": {
                    "type": "integer",
                    "example": 1000
                },
                "thumbnail_url": {
                    "type": "string",
                    "example": "https://example.com/artist.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "Inabakumori"
                }
            }
        },
        "delivery.ArtistLikeRequest": {
            "description": "A request to like or unlike an artist. Should be authenticated",
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "delivery.AvatarURL": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                }
            }
        },
        "delivery.DeleteAlbumRequest": {
            "type": "object",
            "properties": {
                "album_id": {
                    "type": "integer"
                },
                "label_id": {
                    "type": "integer"
                }
            }
        },
        "delivery.DeleteArtistRequest": {
            "type": "object",
            "properties": {
                "artist_id": {
                    "type": "integer"
                }
            }
        },
        "delivery.EditLabelRequest": {
            "type": "object",
            "properties": {
                "label_id": {
                    "type": "integer"
                },
                "to_add": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "to_remove": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "delivery.Label": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "label_name": {
                    "type": "string"
                },
                "usernames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "delivery.LoginData": {
            "description": "User login data. Either username or email must be provided along with required password (4-25 characters)",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "delivery.Message": {
            "description": "Message for responses without data",
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string",
                    "example": "object have been successfully created/updated"
                }
            }
        },
        "delivery.Playlist": {
            "description": "Playlist structure",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "delivery.PlaylistLikeRequest": {
            "description": "A request to like or unlike an playlist. Should be authenticated",
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "delivery.PlaylistWithIsIncludedTrack": {
            "description": "Playlist with is included track structure",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_included": {
                    "type": "boolean"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "delivery.PlaylistWithIsLiked": {
            "description": "Playlist with is liked structure",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_liked": {
                    "type": "boolean"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "delivery.Privacy": {
            "type": "object",
            "properties": {
                "is_public_artists_listened": {
                    "type": "boolean"
                },
                "is_public_favorite_artists": {
                    "type": "boolean"
                },
                "is_public_favorite_tracks": {
                    "type": "boolean"
                },
                "is_public_minutes_listened": {
                    "type": "boolean"
                },
                "is_public_playlists": {
                    "type": "boolean"
                },
                "is_public_tracks_listened": {
                    "type": "boolean"
                }
            }
        },
        "delivery.RegisterData": {
            "description": "User registration data requiring username (3-20 characters), password (4-25 characters), and valid email (5-30 characters)",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "delivery.Statistics": {
            "type": "object",
            "properties": {
                "artists_listened": {
                    "type": "integer"
                },
                "minutes_listened": {
                    "type": "integer"
                },
                "tracks_listened": {
                    "type": "integer"
                }
            }
        },
        "delivery.StreamID": {
            "description": "An id of a track stream",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "delivery.SuccessCreateAlbum": {
            "type": "object",
            "properties": {
                "album_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "delivery.Track": {
            "description": "A music track entity",
            "type": "object",
            "properties": {
                "album": {
                    "type": "string"
                },
                "album_id": {
                    "type": "integer",
                    "example": 1
                },
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/delivery.TrackArtist"
                    }
                },
                "duration": {
                    "type": "integer",
                    "example": 216
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_liked": {
                    "type": "boolean",
                    "example": false
                },
                "thumbnail_url": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "Lagtrain"
                }
            }
        },
        "delivery.TrackArtist": {
            "description": "An artist associated with a track",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "role": {
                    "type": "string",
                    "example": "Main artist"
                },
                "title": {
                    "type": "string",
                    "example": "Lagtrain"
                }
            }
        },
        "delivery.TrackDetailed": {
            "type": "object",
            "properties": {
                "album": {
                    "type": "string"
                },
                "album_id": {
                    "type": "integer",
                    "example": 1
                },
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/delivery.TrackArtist"
                    }
                },
                "duration": {
                    "type": "integer",
                    "example": 216
                },
                "file_url": {
                    "type": "string",
                    "example": "https://example.com/track.mp3"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_liked": {
                    "type": "boolean",
                    "example": false
                },
                "thumbnail_url": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "Lagtrain"
                }
            }
        },
        "delivery.TrackLikeRequest": {
            "description": "A request to like or unlike an track. Should be authenticated",
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "delivery.UserChangeSettings": {
            "type": "object",
            "properties": {
                "new_email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "new_username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "privacy": {
                    "$ref": "#/definitions/delivery.Privacy"
                }
            }
        },
        "delivery.UserDelete": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "delivery.UserFullData": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "privacy": {
                    "$ref": "#/definitions/delivery.Privacy"
                },
                "statistics": {
                    "$ref": "#/definitions/delivery.Statistics"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "delivery.UserToFront": {
            "description": "User data",
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "is_label": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "returnzero.ru",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Return Zero API",
	Description:      "This is the API server for Return Zero music app.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
