{
    "swagger": "2.0",
    "info": {
        "description": "This is the API server for Return Zero music app.",
        "title": "Return Zero API",
        "contact": {},
        "version": "1.0"
    },
    "host": "returnzero.ru",
    "basePath": "/api/v1",
    "paths": {
        "/albums": {
            "get": {
                "description": "Get a list of albums with optional pagination filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albums"
                ],
                "summary": "Get albums",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of albums",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Album"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/artists": {
            "get": {
                "description": "Get a list of artists with optional pagination filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artists"
                ],
                "summary": "Get artists",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of artists",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Artist"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/artists/{id}": {
            "get": {
                "description": "Get detailed information about a specific artist by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artists"
                ],
                "summary": "Get artist by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.ArtistDetailed"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/artists/{id}/albums": {
            "get": {
                "description": "Get a list of albums for a specific artist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "albums"
                ],
                "summary": "Get albums by artist ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of albums",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Album"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid artist ID",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/artists/{id}/tracks": {
            "get": {
                "description": "Get a list of tracks by a specific artist with optional pagination filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Get tracks by artist ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tracks by artist",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Track"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID or filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/check": {
            "get": {
                "description": "Verifies user's session and returns user information if authenticated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Check user authentication",
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.UserToFront"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - session not found or invalid",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticates a user with provided login credentials and returns a session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "User login data",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.LoginData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully authenticated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.UserToFront"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid login data",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Terminates user session and invalidates session cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log out user",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.Message"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - session not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Creates a new user account with provided registration data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.RegisterData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully registered",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.UserToFront"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid registration data",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/streams/{id}": {
            "put": {
                "description": "updates listening duration at the end of stream",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Update stream duration by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Stream ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message that stream was updated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Message"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID or filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tracks": {
            "get": {
                "description": "Get a list of tracks with optional pagination filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Get tracks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tracks",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.Track"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tracks/{id}": {
            "get": {
                "description": "Retrieves a specific track by its ID with detailed information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Get track by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Track details",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.TrackDetailed"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/tracks/{id}/stream": {
            "post": {
                "description": "Creates stream for track by id, essentially it means saving track to listening history",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Create stream for track by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID of created stream",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/delivery.StreamID"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID or filters",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/{username}": {
            "put": {
                "description": "Updates user's profile information such as username, email, or password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Change user profile data",
                "parameters": [
                    {
                        "description": "User data to be updated",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.ChangeUserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User data successfully updated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.UserToFront"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid user data or validation failure",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the authenticated user's account. Requires valid session cookie and matching user credentials.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID cookie (session_id=...)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User credentials for deletion verification",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.UserDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully deleted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.Message"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Possible errors: invalid request body, validation failed, credentials mismatch, session cookie missing",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error during user deletion",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/{username}/avatar": {
            "get": {
                "description": "Retrieves the avatar URL for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user avatar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avatar URL",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.AvatarData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - username not found",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIInternalServerErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Uploads a new avatar image for a specific user",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Upload user avatar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Avatar image file (max 5MB, image formats only)",
                        "name": "avatar",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avatar successfully uploaded",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/delivery.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "body": {
                                            "$ref": "#/definitions/delivery.Message"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid file or username",
                        "schema": {
                            "$ref": "#/definitions/delivery.APIBadRequestErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "delivery.APIBadRequestErrorResponse": {
            "description": "API bad request error response structure",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Something went wrong"
                },
                "status": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "delivery.APIInternalServerErrorResponse": {
            "description": "API internal server error response structure",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Something went wrong"
                },
                "status": {
                    "type": "integer",
                    "example": 500
                }
            }
        },
        "delivery.APIResponse": {
            "description": "API response wrapper",
            "type": "object",
            "properties": {
                "body": {},
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "delivery.Album": {
            "description": "A music album entity",
            "type": "object",
            "properties": {
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/delivery.AlbumArtist"
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "release_date": {
                    "type": "string",
                    "example": "2021-01-01"
                },
                "thumbnail_url": {
                    "type": "string",
                    "example": "https://example.com/album.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "Anticyclone"
                },
                "type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/delivery.AlbumType"
                        }
                    ],
                    "example": "album"
                }
            }
        },
        "delivery.AlbumArtist": {
            "description": "An artist associated with an album",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "Inabakumori"
                }
            }
        },
        "delivery.AlbumType": {
            "type": "string",
            "enum": [
                "album",
                "ep",
                "compilation",
                "single"
            ],
            "x-enum-varnames": [
                "AlbumTypeAlbum",
                "AlbumTypeEP",
                "AlbumTypeCompilation",
                "AlbumTypeSingle"
            ]
        },
        "delivery.Artist": {
            "description": "A music artist entity",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Inabakumori is a Japanese artist"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "thumbnail_url": {
                    "type": "string",
                    "example": "https://example.com/artist.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "Inabakumori"
                }
            }
        },
        "delivery.ArtistDetailed": {
            "description": "A detailed music artist entity",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Inabakumori is a Japanese artist"
                },
                "favorites_count": {
                    "type": "integer",
                    "example": 1000
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "listeners_count": {
                    "type": "integer",
                    "example": 1000
                },
                "thumbnail_url": {
                    "type": "string",
                    "example": "https://example.com/artist.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "Inabakumori"
                }
            }
        },
        "delivery.AvatarData": {
            "description": "Contains URL to user's avatar image",
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                }
            }
        },
        "delivery.ChangeUserData": {
            "description": "Data for user profile update. Requires current credentials and allows new username (3-20 alphanum), new email (5-30 valid format), and new password (4-25 characters)",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "new_email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "new_username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "delivery.LoginData": {
            "description": "User login data. Either username or email must be provided along with required password (4-25 characters)",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "delivery.Message": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string",
                    "example": "object have been successfully created/updated"
                }
            }
        },
        "delivery.RegisterData": {
            "description": "User registration data requiring username (3-20 characters), password (4-25 characters), and valid email (5-30 characters)",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "delivery.StreamID": {
            "description": "An id of a track stream",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "delivery.Track": {
            "description": "A music track entity",
            "type": "object",
            "properties": {
                "album": {
                    "type": "string"
                },
                "album_id": {
                    "type": "integer",
                    "example": 1
                },
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/delivery.TrackArtist"
                    }
                },
                "duration": {
                    "type": "integer",
                    "example": 216
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "thumbnail_url": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "Lagtrain"
                }
            }
        },
        "delivery.TrackArtist": {
            "description": "An artist associated with a track",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "role": {
                    "type": "string",
                    "example": "Main artist"
                },
                "title": {
                    "type": "string",
                    "example": "Lagtrain"
                }
            }
        },
        "delivery.TrackDetailed": {
            "type": "object",
            "properties": {
                "album": {
                    "type": "string"
                },
                "album_id": {
                    "type": "integer",
                    "example": 1
                },
                "artists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/delivery.TrackArtist"
                    }
                },
                "duration": {
                    "type": "integer",
                    "example": 216
                },
                "file_url": {
                    "type": "string",
                    "example": "https://example.com/track.mp3"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "thumbnail_url": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "Lagtrain"
                }
            }
        },
        "delivery.UserDelete": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "delivery.UserToFront": {
            "description": "User data",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}