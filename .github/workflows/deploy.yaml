name: workflow 

on:
  push:
    branches:
      - main
      - dev
      - rk4_cicd

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests and check coverage
        run: |
          make test

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage.html
          retention-days: 3

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=20m --config=./.golangci.yml
          skip-cache: true

  build:
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
    strategy:
      matrix:
        service:
          - name: artist
            context: .
            dockerfile: ./deploy/images/artist/Dockerfile
            tag: artist-service
          - name: album
            context: .
            dockerfile: ./deploy/images/album/Dockerfile
            tag: album-service
          - name: track
            context: .
            dockerfile: ./deploy/images/track/Dockerfile
            tag: track-service
          - name: auth
            context: .
            dockerfile: ./deploy/images/auth/Dockerfile
            tag: auth-service
          - name: user
            context: .
            dockerfile: ./deploy/images/user/Dockerfile
            tag: user-service
          - name: playlist
            context: .
            dockerfile: ./deploy/images/playlist/Dockerfile
            tag: playlist-service
          - name: api
            context: .
            dockerfile: ./deploy/images/api/Dockerfile
            tag: api
          - name: postgres
            context: ./deploy/images/postgres
            dockerfile: Dockerfile
            tag: postgres
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo '${{ secrets.ENV_FILE }}' > .env
          chmod 644 .env

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up qemu
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push ${{ matrix.service.name }} service
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service.tag }}:latest


