name: workflow 

on:
  push:
    branches:
      - main
      - dev
      - rk4_cicd

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: 1.24

  #     - name: Install dependencies
  #       run: go mod tidy

  #     - name: Run tests and check coverage
  #       run: |
  #         make test

  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: 1.24

  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@v5
  #       with:
  #         version: latest
  #         args: --timeout=20m --config=./.golangci.yml

  build:
    runs-on: ubuntu-latest
    # needs:
    #   - test
    #   - lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up qemu
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push artist service
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./deploy/images/artist/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/artist-service:latest
          build-args: ENV_FILE=${{ secrets.ENV_FILE }}

      - name: Build and push album service
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./deploy/images/album/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/album-service:latest
          build-args: ENV_FILE=${{ secrets.ENV_FILE }}

      - name: Build and push track service
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./deploy/images/track/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/track-service:latest
          build-args: ENV_FILE=${{ secrets.ENV_FILE }}

      - name: Build and push auth service
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./deploy/images/auth/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/auth-service:latest
          build-args: ENV_FILE=${{ secrets.ENV_FILE }}

      - name: Build and push user service
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./deploy/images/user/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/user-service:latest
          build-args: ENV_FILE=${{ secrets.ENV_FILE }}

      - name: Build and push playlist service
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./deploy/images/playlist/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/playlist-service:latest
          build-args: ENV_FILE=${{ secrets.ENV_FILE }}

      - name: Build and push api
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./deploy/images/api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/api:latest
          build-args: ENV_FILE=${{ secrets.ENV_FILE }}

      - name: Build and push postgres
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./deploy/images/postgres/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/postgres:latest
          


