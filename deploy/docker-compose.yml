# docker-compose up
# docker rm $(docker ps -a -q) && docker volume prune -f

services:
  postgres:
    image: postgres:16
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - './_postgres/:/docker-entrypoint-initdb.d/'
    tty: true

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin
    links:
        - "postgres:postgres"
    ports:
      - 8090:8080
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 8080
    tty: true

  redis:
    image: 'redis'
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    tty: true

  api:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: ReturnZeroAPI
    environment:
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgres
    restart: always
    ports:
      - '8080:8080'
    tty: true
    depends_on:
      - postgres
      - redis
