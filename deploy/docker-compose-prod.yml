# docker-compose up
# docker rm $(docker ps -a -q) && docker volume prune -f


services:
  postgres:
    image: derletzte256/postgres:latest
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - 'pgdata:/var/lib/postgresql/data'
      - './_postgres:/docker-entrypoint-initdb.d'
    tty: true

  redis:
    image: 'redis'
    container_name: redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - '6379:6379'
    tty: true

  go-api:
    image: derletzte256/api:latest
    container_name: ReturnZeroAPI
    environment:
      ARTIST_SERVICE_HOST: artist-grpc
      ALBUM_SERVICE_HOST: album-grpc
      TRACK_SERVICE_HOST: track-grpc
      PLAYLIST_SERVICE_HOST: playlist-grpc
      AUTH_SERVICE_HOST: auth-grpc
      USER_SERVICE_HOST: user-grpc
    restart: always
    ports:
      - '8080:8080'
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    tty: true
    depends_on:
      - postgres
      - redis
      - artist-grpc
      - album-grpc
      - track-grpc
      - playlist-grpc
      - auth-grpc
      - user-grpc

  artist-grpc:
    image: derletzte256/artist-service:latest
    container_name: artist-grpc
    restart: always
    depends_on:
      - postgres
    ports:
      - '5001:5001'
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    tty: true

  track-grpc:
    image: derletzte256/track-service:latest
    container_name: track-grpc
    restart: always
    depends_on:
      - postgres
    ports:
      - '5002:5002'
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    tty: true

  album-grpc:
    image: derletzte256/album-service:latest
    container_name: album-grpc
    restart: always
    depends_on:
      - postgres
    ports:
      - '5003:5003'
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    tty: true
    
  auth-grpc:
    image: derletzte256/auth-service:latest
    environment:
      REDIS_PORT: ${REDIS_PORT}
      REDIS_HOST: redis
    container_name: auth-grpc
    restart: always
    depends_on:
      - redis
    ports:
      - '5004:5004'
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    tty: true

  user-grpc:
    image: derletzte256/user-service:latest
    container_name: user-grpc
    restart: always
    depends_on:
      - postgres
    ports:
      - '5005:5005'
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    tty: true

  playlist-grpc:
    image: derletzte256/playlist-service:latest
    container_name: playlist-grpc
    restart: always
    depends_on:
      - postgres
    ports:
      - '5006:5006'
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    tty: true

  nginx:
    build:
      context: ./images/nginx
      dockerfile: Dockerfile-prod
    container_name: nginx
    restart: always
    ports:
      - '443:443'
    volumes:
      - '/etc/ssl:/etc/ssl'
      - '../dist:/usr/share/nginx/static'   
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.depends-on=ReturnZeroAPI"
    depends_on:
      - go-api
    tty: true

  prometheus:
    build:
      context: ./images/prometheus
      dockerfile: Dockerfile
    container_name: prometheus
    restart: always
    ports:
      - '9090:9090'

  grafana:
    build:
      context: ./images/grafana
      dockerfile: Dockerfile
    container_name: grafana
    restart: always
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USERNAME}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: false
    ports:
      - '3000:3000'
    depends_on:
      - prometheus

  node-exporter:
    restart: always
    image: mirror.gcr.io/prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
#      - --collector.filesystem.ignored-mount-points
    ports:
      - "9100:9100"
    tty: true

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: always
    environment:
      WATCHTOWER_ROLLING_RESTART: true
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_INCLUDE_STOPPED: true
      WATCHTOWER_REVIVE_STOPPED: false
      WATCHTOWER_LABEL_ENABLE: true
      WATCHTOWER_INCLUDE_RESTARTING: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 ReturnZeroAPI artist-grpc track-grpc album-grpc auth-grpc user-grpc playlist-grpc

volumes:
  pgdata:
    driver: local