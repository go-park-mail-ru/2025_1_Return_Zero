// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package delivery

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery(in *jlexer.Lexer, out *UserToFront) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "username":
			out.Username = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "avatar_url":
			out.Avatar = string(in.String())
		case "is_label":
			out.IsLabel = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery(out *jwriter.Writer, in UserToFront) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"username\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"avatar_url\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"is_label\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsLabel))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserToFront) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserToFront) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserToFront) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserToFront) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery1(in *jlexer.Lexer, out *UserFullData) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "username":
			out.Username = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "avatar_url":
			out.AvatarUrl = string(in.String())
		case "privacy":
			if in.IsNull() {
				in.Skip()
				out.Privacy = nil
			} else {
				if out.Privacy == nil {
					out.Privacy = new(Privacy)
				}
				(*out.Privacy).UnmarshalEasyJSON(in)
			}
		case "statistics":
			if in.IsNull() {
				in.Skip()
				out.Statistics = nil
			} else {
				if out.Statistics == nil {
					out.Statistics = new(Statistics)
				}
				(*out.Statistics).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery1(out *jwriter.Writer, in UserFullData) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix[1:])
		out.String(string(in.Username))
	}
	if in.Email != "" {
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"avatar_url\":"
		out.RawString(prefix)
		out.String(string(in.AvatarUrl))
	}
	if in.Privacy != nil {
		const prefix string = ",\"privacy\":"
		out.RawString(prefix)
		(*in.Privacy).MarshalEasyJSON(out)
	}
	if in.Statistics != nil {
		const prefix string = ",\"statistics\":"
		out.RawString(prefix)
		(*in.Statistics).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserFullData) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserFullData) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserFullData) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserFullData) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery1(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery2(in *jlexer.Lexer, out *UserDelete) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "username":
			out.Username = string(in.String())
		case "password":
			out.Password = string(in.String())
		case "email":
			out.Email = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery2(out *jwriter.Writer, in UserDelete) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix[1:])
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserDelete) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserDelete) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserDelete) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserDelete) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery2(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery3(in *jlexer.Lexer, out *UserChangeSettings) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "privacy":
			if in.IsNull() {
				in.Skip()
				out.Privacy = nil
			} else {
				if out.Privacy == nil {
					out.Privacy = new(Privacy)
				}
				(*out.Privacy).UnmarshalEasyJSON(in)
			}
		case "password":
			out.Password = string(in.String())
		case "new_username":
			out.NewUsername = string(in.String())
		case "new_email":
			out.NewEmail = string(in.String())
		case "new_password":
			out.NewPassword = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery3(out *jwriter.Writer, in UserChangeSettings) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"privacy\":"
		out.RawString(prefix[1:])
		if in.Privacy == nil {
			out.RawString("null")
		} else {
			(*in.Privacy).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	{
		const prefix string = ",\"new_username\":"
		out.RawString(prefix)
		out.String(string(in.NewUsername))
	}
	{
		const prefix string = ",\"new_email\":"
		out.RawString(prefix)
		out.String(string(in.NewEmail))
	}
	{
		const prefix string = ",\"new_password\":"
		out.RawString(prefix)
		out.String(string(in.NewPassword))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserChangeSettings) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserChangeSettings) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserChangeSettings) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserChangeSettings) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery3(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery4(in *jlexer.Lexer, out *UpdatePlaylistRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Title":
			out.Title = string(in.String())
		case "Thumbnail":
			if in.IsNull() {
				in.Skip()
				out.Thumbnail = nil
			} else {
				out.Thumbnail = in.Bytes()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery4(out *jwriter.Writer, in UpdatePlaylistRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Title\":"
		out.RawString(prefix[1:])
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"Thumbnail\":"
		out.RawString(prefix)
		out.Base64Bytes(in.Thumbnail)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UpdatePlaylistRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UpdatePlaylistRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UpdatePlaylistRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UpdatePlaylistRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery4(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery5(in *jlexer.Lexer, out *TrackStreamUpdateData) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "duration":
			out.Duration = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery5(out *jwriter.Writer, in TrackStreamUpdateData) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"duration\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Duration))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TrackStreamUpdateData) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TrackStreamUpdateData) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TrackStreamUpdateData) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TrackStreamUpdateData) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery5(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery6(in *jlexer.Lexer, out *TrackStreamCreateData) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "TrackID":
			out.TrackID = int64(in.Int64())
		case "UserID":
			out.UserID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery6(out *jwriter.Writer, in TrackStreamCreateData) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"TrackID\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.TrackID))
	}
	{
		const prefix string = ",\"UserID\":"
		out.RawString(prefix)
		out.Int64(int64(in.UserID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TrackStreamCreateData) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TrackStreamCreateData) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TrackStreamCreateData) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TrackStreamCreateData) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery6(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery7(in *jlexer.Lexer, out *TrackStream) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		case "track_id":
			out.TrackID = int64(in.Int64())
		case "duration":
			out.Duration = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery7(out *jwriter.Writer, in TrackStream) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"track_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.TrackID))
	}
	{
		const prefix string = ",\"duration\":"
		out.RawString(prefix)
		out.Int64(int64(in.Duration))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TrackStream) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TrackStream) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TrackStream) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TrackStream) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery7(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery8(in *jlexer.Lexer, out *TrackLikeRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "value":
			out.IsLike = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery8(out *jwriter.Writer, in TrackLikeRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"value\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.IsLike))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TrackLikeRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TrackLikeRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TrackLikeRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TrackLikeRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery8(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery9(in *jlexer.Lexer, out *TrackFilters) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Pagination":
			if in.IsNull() {
				in.Skip()
				out.Pagination = nil
			} else {
				if out.Pagination == nil {
					out.Pagination = new(Pagination)
				}
				(*out.Pagination).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery9(out *jwriter.Writer, in TrackFilters) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Pagination\":"
		out.RawString(prefix[1:])
		if in.Pagination == nil {
			out.RawString("null")
		} else {
			(*in.Pagination).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TrackFilters) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TrackFilters) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TrackFilters) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TrackFilters) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery9(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery10(in *jlexer.Lexer, out *TrackDetailed) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "file_url":
			out.FileUrl = string(in.String())
		case "id":
			out.ID = int64(in.Int64())
		case "title":
			out.Title = string(in.String())
		case "thumbnail_url":
			out.Thumbnail = string(in.String())
		case "duration":
			out.Duration = int64(in.Int64())
		case "album_id":
			out.AlbumID = int64(in.Int64())
		case "album":
			out.Album = string(in.String())
		case "artists":
			if in.IsNull() {
				in.Skip()
				out.Artists = nil
			} else {
				in.Delim('[')
				if out.Artists == nil {
					if !in.IsDelim(']') {
						out.Artists = make([]*TrackArtist, 0, 8)
					} else {
						out.Artists = []*TrackArtist{}
					}
				} else {
					out.Artists = (out.Artists)[:0]
				}
				for !in.IsDelim(']') {
					var v4 *TrackArtist
					if in.IsNull() {
						in.Skip()
						v4 = nil
					} else {
						if v4 == nil {
							v4 = new(TrackArtist)
						}
						(*v4).UnmarshalEasyJSON(in)
					}
					out.Artists = append(out.Artists, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "is_liked":
			out.IsLiked = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery10(out *jwriter.Writer, in TrackDetailed) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"file_url\":"
		out.RawString(prefix[1:])
		out.String(string(in.FileUrl))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"thumbnail_url\":"
		out.RawString(prefix)
		out.String(string(in.Thumbnail))
	}
	{
		const prefix string = ",\"duration\":"
		out.RawString(prefix)
		out.Int64(int64(in.Duration))
	}
	{
		const prefix string = ",\"album_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.AlbumID))
	}
	{
		const prefix string = ",\"album\":"
		out.RawString(prefix)
		out.String(string(in.Album))
	}
	{
		const prefix string = ",\"artists\":"
		out.RawString(prefix)
		if in.Artists == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.Artists {
				if v5 > 0 {
					out.RawByte(',')
				}
				if v6 == nil {
					out.RawString("null")
				} else {
					(*v6).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"is_liked\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsLiked))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TrackDetailed) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TrackDetailed) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TrackDetailed) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TrackDetailed) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery10(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery11(in *jlexer.Lexer, out *TrackArtist) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		case "title":
			out.Title = string(in.String())
		case "role":
			out.Role = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery11(out *jwriter.Writer, in TrackArtist) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"role\":"
		out.RawString(prefix)
		out.String(string(in.Role))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TrackArtist) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TrackArtist) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TrackArtist) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TrackArtist) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery11(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery12(in *jlexer.Lexer, out *Track) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		case "title":
			out.Title = string(in.String())
		case "thumbnail_url":
			out.Thumbnail = string(in.String())
		case "duration":
			out.Duration = int64(in.Int64())
		case "album_id":
			out.AlbumID = int64(in.Int64())
		case "album":
			out.Album = string(in.String())
		case "artists":
			if in.IsNull() {
				in.Skip()
				out.Artists = nil
			} else {
				in.Delim('[')
				if out.Artists == nil {
					if !in.IsDelim(']') {
						out.Artists = make([]*TrackArtist, 0, 8)
					} else {
						out.Artists = []*TrackArtist{}
					}
				} else {
					out.Artists = (out.Artists)[:0]
				}
				for !in.IsDelim(']') {
					var v7 *TrackArtist
					if in.IsNull() {
						in.Skip()
						v7 = nil
					} else {
						if v7 == nil {
							v7 = new(TrackArtist)
						}
						(*v7).UnmarshalEasyJSON(in)
					}
					out.Artists = append(out.Artists, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "is_liked":
			out.IsLiked = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery12(out *jwriter.Writer, in Track) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"thumbnail_url\":"
		out.RawString(prefix)
		out.String(string(in.Thumbnail))
	}
	{
		const prefix string = ",\"duration\":"
		out.RawString(prefix)
		out.Int64(int64(in.Duration))
	}
	{
		const prefix string = ",\"album_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.AlbumID))
	}
	{
		const prefix string = ",\"album\":"
		out.RawString(prefix)
		out.String(string(in.Album))
	}
	{
		const prefix string = ",\"artists\":"
		out.RawString(prefix)
		if in.Artists == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v8, v9 := range in.Artists {
				if v8 > 0 {
					out.RawByte(',')
				}
				if v9 == nil {
					out.RawString("null")
				} else {
					(*v9).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"is_liked\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsLiked))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Track) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Track) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Track) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Track) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery12(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery13(in *jlexer.Lexer, out *SuccessCreateAlbum) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "album_id":
			out.AlbumID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery13(out *jwriter.Writer, in SuccessCreateAlbum) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"album_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.AlbumID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SuccessCreateAlbum) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SuccessCreateAlbum) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SuccessCreateAlbum) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SuccessCreateAlbum) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery13(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery14(in *jlexer.Lexer, out *StreamID) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery14(out *jwriter.Writer, in StreamID) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v StreamID) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v StreamID) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *StreamID) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *StreamID) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery14(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery15(in *jlexer.Lexer, out *Statistics) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "minutes_listened":
			out.MinutesListened = int64(in.Int64())
		case "tracks_listened":
			out.TracksListened = int64(in.Int64())
		case "artists_listened":
			out.ArtistsListened = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery15(out *jwriter.Writer, in Statistics) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"minutes_listened\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.MinutesListened))
	}
	{
		const prefix string = ",\"tracks_listened\":"
		out.RawString(prefix)
		out.Int64(int64(in.TracksListened))
	}
	{
		const prefix string = ",\"artists_listened\":"
		out.RawString(prefix)
		out.Int64(int64(in.ArtistsListened))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Statistics) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Statistics) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Statistics) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Statistics) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery15(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery16(in *jlexer.Lexer, out *RegisterData) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "username":
			out.Username = string(in.String())
		case "password":
			out.Password = string(in.String())
		case "email":
			out.Email = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery16(out *jwriter.Writer, in RegisterData) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix[1:])
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RegisterData) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RegisterData) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RegisterData) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RegisterData) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery16(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery17(in *jlexer.Lexer, out *Privacy) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "is_public_playlists":
			out.IsPublicPlaylists = bool(in.Bool())
		case "is_public_minutes_listened":
			out.IsPublicMinutesListened = bool(in.Bool())
		case "is_public_favorite_artists":
			out.IsPublicFavoriteArtists = bool(in.Bool())
		case "is_public_tracks_listened":
			out.IsPublicTracksListened = bool(in.Bool())
		case "is_public_favorite_tracks":
			out.IsPublicFavoriteTracks = bool(in.Bool())
		case "is_public_artists_listened":
			out.IsPublicArtistsListened = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery17(out *jwriter.Writer, in Privacy) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"is_public_playlists\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.IsPublicPlaylists))
	}
	{
		const prefix string = ",\"is_public_minutes_listened\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsPublicMinutesListened))
	}
	{
		const prefix string = ",\"is_public_favorite_artists\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsPublicFavoriteArtists))
	}
	{
		const prefix string = ",\"is_public_tracks_listened\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsPublicTracksListened))
	}
	{
		const prefix string = ",\"is_public_favorite_tracks\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsPublicFavoriteTracks))
	}
	{
		const prefix string = ",\"is_public_artists_listened\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsPublicArtistsListened))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Privacy) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery17(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Privacy) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery17(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Privacy) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery17(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Privacy) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery17(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery18(in *jlexer.Lexer, out *PlaylistWithIsLiked) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "is_liked":
			out.IsLiked = bool(in.Bool())
		case "id":
			out.ID = int64(in.Int64())
		case "title":
			out.Title = string(in.String())
		case "thumbnail_url":
			out.Thumbnail = string(in.String())
		case "username":
			out.Username = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery18(out *jwriter.Writer, in PlaylistWithIsLiked) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"is_liked\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.IsLiked))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"thumbnail_url\":"
		out.RawString(prefix)
		out.String(string(in.Thumbnail))
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PlaylistWithIsLiked) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery18(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PlaylistWithIsLiked) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery18(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PlaylistWithIsLiked) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery18(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PlaylistWithIsLiked) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery18(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery19(in *jlexer.Lexer, out *PlaylistWithIsIncludedTrack) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "is_included":
			out.IsIncluded = bool(in.Bool())
		case "id":
			out.ID = int64(in.Int64())
		case "title":
			out.Title = string(in.String())
		case "thumbnail_url":
			out.Thumbnail = string(in.String())
		case "username":
			out.Username = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery19(out *jwriter.Writer, in PlaylistWithIsIncludedTrack) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"is_included\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.IsIncluded))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"thumbnail_url\":"
		out.RawString(prefix)
		out.String(string(in.Thumbnail))
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PlaylistWithIsIncludedTrack) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery19(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PlaylistWithIsIncludedTrack) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery19(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PlaylistWithIsIncludedTrack) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery19(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PlaylistWithIsIncludedTrack) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery19(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery20(in *jlexer.Lexer, out *PlaylistLikeRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "value":
			out.IsLike = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery20(out *jwriter.Writer, in PlaylistLikeRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"value\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.IsLike))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PlaylistLikeRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery20(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PlaylistLikeRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery20(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PlaylistLikeRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery20(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PlaylistLikeRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery20(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery21(in *jlexer.Lexer, out *Playlist) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		case "title":
			out.Title = string(in.String())
		case "thumbnail_url":
			out.Thumbnail = string(in.String())
		case "username":
			out.Username = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery21(out *jwriter.Writer, in Playlist) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"thumbnail_url\":"
		out.RawString(prefix)
		out.String(string(in.Thumbnail))
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Playlist) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery21(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Playlist) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery21(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Playlist) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery21(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Playlist) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery21(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery22(in *jlexer.Lexer, out *Pagination) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "offset":
			out.Offset = int(in.Int())
		case "limit":
			out.Limit = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery22(out *jwriter.Writer, in Pagination) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"offset\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Offset))
	}
	{
		const prefix string = ",\"limit\":"
		out.RawString(prefix)
		out.Int(int(in.Limit))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Pagination) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery22(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pagination) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery22(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pagination) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery22(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pagination) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery22(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery23(in *jlexer.Lexer, out *Message) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "msg":
			out.Message = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery23(out *jwriter.Writer, in Message) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix[1:])
		out.String(string(in.Message))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Message) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery23(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Message) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery23(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Message) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery23(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Message) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery23(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery24(in *jlexer.Lexer, out *LoginData) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "username":
			out.Username = string(in.String())
		case "password":
			out.Password = string(in.String())
		case "email":
			out.Email = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery24(out *jwriter.Writer, in LoginData) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix[1:])
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v LoginData) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery24(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v LoginData) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery24(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *LoginData) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery24(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *LoginData) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery24(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery25(in *jlexer.Lexer, out *Label) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int64(in.Int64())
		case "usernames":
			if in.IsNull() {
				in.Skip()
				out.Usernames = nil
			} else {
				in.Delim('[')
				if out.Usernames == nil {
					if !in.IsDelim(']') {
						out.Usernames = make([]string, 0, 4)
					} else {
						out.Usernames = []string{}
					}
				} else {
					out.Usernames = (out.Usernames)[:0]
				}
				for !in.IsDelim(']') {
					var v10 string
					v10 = string(in.String())
					out.Usernames = append(out.Usernames, v10)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "label_name":
			out.LabelName = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery25(out *jwriter.Writer, in Label) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Id != 0 {
		const prefix string = ",\"id\":"
		first = false
		out.RawString(prefix[1:])
		out.Int64(int64(in.Id))
	}
	{
		const prefix string = ",\"usernames\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		if in.Usernames == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v11, v12 := range in.Usernames {
				if v11 > 0 {
					out.RawByte(',')
				}
				out.String(string(v12))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"label_name\":"
		out.RawString(prefix)
		out.String(string(in.LabelName))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Label) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery25(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Label) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery25(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Label) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery25(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Label) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery25(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery26(in *jlexer.Lexer, out *JamMessage) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "type":
			out.Type = string(in.String())
		case "track_id":
			out.TrackID = string(in.String())
		case "position":
			out.Position = int64(in.Int64())
		case "paused":
			out.Paused = bool(in.Bool())
		case "host_id":
			out.HostID = string(in.String())
		case "user_id":
			out.UserID = string(in.String())
		case "users":
			if in.IsNull() {
				in.Skip()
				out.Users = nil
			} else {
				in.Delim('[')
				if out.Users == nil {
					if !in.IsDelim(']') {
						out.Users = make([]string, 0, 4)
					} else {
						out.Users = []string{}
					}
				} else {
					out.Users = (out.Users)[:0]
				}
				for !in.IsDelim(']') {
					var v13 string
					v13 = string(in.String())
					out.Users = append(out.Users, v13)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "loaded":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.Loaded = make(map[string]bool)
				} else {
					out.Loaded = nil
				}
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v14 bool
					v14 = bool(in.Bool())
					(out.Loaded)[key] = v14
					in.WantComma()
				}
				in.Delim('}')
			}
		case "error":
			out.Error = string(in.String())
		case "user_images":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.UserImages = make(map[string]string)
				} else {
					out.UserImages = nil
				}
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v15 string
					v15 = string(in.String())
					(out.UserImages)[key] = v15
					in.WantComma()
				}
				in.Delim('}')
			}
		case "user_names":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.UserNames = make(map[string]string)
				} else {
					out.UserNames = nil
				}
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v16 string
					v16 = string(in.String())
					(out.UserNames)[key] = v16
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery26(out *jwriter.Writer, in JamMessage) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix[1:])
		out.String(string(in.Type))
	}
	if in.TrackID != "" {
		const prefix string = ",\"track_id\":"
		out.RawString(prefix)
		out.String(string(in.TrackID))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.Int64(int64(in.Position))
	}
	if in.Paused {
		const prefix string = ",\"paused\":"
		out.RawString(prefix)
		out.Bool(bool(in.Paused))
	}
	if in.HostID != "" {
		const prefix string = ",\"host_id\":"
		out.RawString(prefix)
		out.String(string(in.HostID))
	}
	if in.UserID != "" {
		const prefix string = ",\"user_id\":"
		out.RawString(prefix)
		out.String(string(in.UserID))
	}
	if len(in.Users) != 0 {
		const prefix string = ",\"users\":"
		out.RawString(prefix)
		{
			out.RawByte('[')
			for v17, v18 := range in.Users {
				if v17 > 0 {
					out.RawByte(',')
				}
				out.String(string(v18))
			}
			out.RawByte(']')
		}
	}
	if len(in.Loaded) != 0 {
		const prefix string = ",\"loaded\":"
		out.RawString(prefix)
		{
			out.RawByte('{')
			v19First := true
			for v19Name, v19Value := range in.Loaded {
				if v19First {
					v19First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v19Name))
				out.RawByte(':')
				out.Bool(bool(v19Value))
			}
			out.RawByte('}')
		}
	}
	if in.Error != "" {
		const prefix string = ",\"error\":"
		out.RawString(prefix)
		out.String(string(in.Error))
	}
	if len(in.UserImages) != 0 {
		const prefix string = ",\"user_images\":"
		out.RawString(prefix)
		{
			out.RawByte('{')
			v20First := true
			for v20Name, v20Value := range in.UserImages {
				if v20First {
					v20First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v20Name))
				out.RawByte(':')
				out.String(string(v20Value))
			}
			out.RawByte('}')
		}
	}
	if len(in.UserNames) != 0 {
		const prefix string = ",\"user_names\":"
		out.RawString(prefix)
		{
			out.RawByte('{')
			v21First := true
			for v21Name, v21Value := range in.UserNames {
				if v21First {
					v21First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v21Name))
				out.RawByte(':')
				out.String(string(v21Value))
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v JamMessage) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery26(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v JamMessage) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery26(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *JamMessage) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery26(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *JamMessage) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery26(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery27(in *jlexer.Lexer, out *EditLabelRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "label_id":
			out.LabelID = int64(in.Int64())
		case "to_add":
			if in.IsNull() {
				in.Skip()
				out.ToAdd = nil
			} else {
				in.Delim('[')
				if out.ToAdd == nil {
					if !in.IsDelim(']') {
						out.ToAdd = make([]string, 0, 4)
					} else {
						out.ToAdd = []string{}
					}
				} else {
					out.ToAdd = (out.ToAdd)[:0]
				}
				for !in.IsDelim(']') {
					var v22 string
					v22 = string(in.String())
					out.ToAdd = append(out.ToAdd, v22)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "to_remove":
			if in.IsNull() {
				in.Skip()
				out.ToRemove = nil
			} else {
				in.Delim('[')
				if out.ToRemove == nil {
					if !in.IsDelim(']') {
						out.ToRemove = make([]string, 0, 4)
					} else {
						out.ToRemove = []string{}
					}
				} else {
					out.ToRemove = (out.ToRemove)[:0]
				}
				for !in.IsDelim(']') {
					var v23 string
					v23 = string(in.String())
					out.ToRemove = append(out.ToRemove, v23)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery27(out *jwriter.Writer, in EditLabelRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"label_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.LabelID))
	}
	if len(in.ToAdd) != 0 {
		const prefix string = ",\"to_add\":"
		out.RawString(prefix)
		{
			out.RawByte('[')
			for v24, v25 := range in.ToAdd {
				if v24 > 0 {
					out.RawByte(',')
				}
				out.String(string(v25))
			}
			out.RawByte(']')
		}
	}
	if len(in.ToRemove) != 0 {
		const prefix string = ",\"to_remove\":"
		out.RawString(prefix)
		{
			out.RawByte('[')
			for v26, v27 := range in.ToRemove {
				if v26 > 0 {
					out.RawByte(',')
				}
				out.String(string(v27))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v EditLabelRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery27(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v EditLabelRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery27(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *EditLabelRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery27(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *EditLabelRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery27(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery28(in *jlexer.Lexer, out *EditArtistRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "artist_id":
			out.ArtistID = int64(in.Int64())
		case "new_title":
			out.NewTitle = string(in.String())
		case "image":
			if in.IsNull() {
				in.Skip()
				out.Image = nil
			} else {
				out.Image = in.Bytes()
			}
		case "label_id":
			out.LabelID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery28(out *jwriter.Writer, in EditArtistRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"artist_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ArtistID))
	}
	if in.NewTitle != "" {
		const prefix string = ",\"new_title\":"
		out.RawString(prefix)
		out.String(string(in.NewTitle))
	}
	if len(in.Image) != 0 {
		const prefix string = ",\"image\":"
		out.RawString(prefix)
		out.Base64Bytes(in.Image)
	}
	{
		const prefix string = ",\"label_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.LabelID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v EditArtistRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery28(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v EditArtistRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery28(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *EditArtistRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery28(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *EditArtistRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery28(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery29(in *jlexer.Lexer, out *DeleteArtistRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "artist_id":
			out.ArtistID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery29(out *jwriter.Writer, in DeleteArtistRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"artist_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ArtistID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v DeleteArtistRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery29(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v DeleteArtistRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery29(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *DeleteArtistRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery29(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *DeleteArtistRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery29(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery30(in *jlexer.Lexer, out *DeleteAlbumRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "album_id":
			out.AlbumID = int64(in.Int64())
		case "label_id":
			out.LabelID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery30(out *jwriter.Writer, in DeleteAlbumRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"album_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.AlbumID))
	}
	{
		const prefix string = ",\"label_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.LabelID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v DeleteAlbumRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery30(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v DeleteAlbumRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery30(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *DeleteAlbumRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery30(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *DeleteAlbumRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery30(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery31(in *jlexer.Lexer, out *CreateTrackRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "title":
			out.Title = string(in.String())
		case "track":
			if in.IsNull() {
				in.Skip()
				out.Track = nil
			} else {
				out.Track = in.Bytes()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery31(out *jwriter.Writer, in CreateTrackRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix[1:])
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"track\":"
		out.RawString(prefix)
		out.Base64Bytes(in.Track)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CreateTrackRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery31(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CreateTrackRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery31(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CreateTrackRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery31(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CreateTrackRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery31(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery32(in *jlexer.Lexer, out *CreatePlaylistRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Title":
			out.Title = string(in.String())
		case "Thumbnail":
			if in.IsNull() {
				in.Skip()
				out.Thumbnail = nil
			} else {
				out.Thumbnail = in.Bytes()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery32(out *jwriter.Writer, in CreatePlaylistRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Title\":"
		out.RawString(prefix[1:])
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"Thumbnail\":"
		out.RawString(prefix)
		out.Base64Bytes(in.Thumbnail)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CreatePlaylistRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery32(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CreatePlaylistRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery32(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CreatePlaylistRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery32(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CreatePlaylistRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery32(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery33(in *jlexer.Lexer, out *CreateJamResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "room_id":
			out.RoomID = string(in.String())
		case "host_id":
			out.HostID = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery33(out *jwriter.Writer, in CreateJamResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"room_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.RoomID))
	}
	{
		const prefix string = ",\"host_id\":"
		out.RawString(prefix)
		out.String(string(in.HostID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CreateJamResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery33(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CreateJamResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery33(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CreateJamResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery33(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CreateJamResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery33(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery34(in *jlexer.Lexer, out *CreateJamRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "track_id":
			out.TrackID = string(in.String())
		case "position":
			out.Position = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery34(out *jwriter.Writer, in CreateJamRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"track_id\":"
		out.RawString(prefix[1:])
		out.String(string(in.TrackID))
	}
	{
		const prefix string = ",\"position\":"
		out.RawString(prefix)
		out.Int64(int64(in.Position))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CreateJamRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery34(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CreateJamRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery34(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CreateJamRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery34(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CreateJamRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery34(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery35(in *jlexer.Lexer, out *CreateArtistRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "title":
			out.Title = string(in.String())
		case "image":
			if in.IsNull() {
				in.Skip()
				out.Image = nil
			} else {
				out.Image = in.Bytes()
			}
		case "label_id":
			out.LabelID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery35(out *jwriter.Writer, in CreateArtistRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix[1:])
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"image\":"
		out.RawString(prefix)
		out.Base64Bytes(in.Image)
	}
	{
		const prefix string = ",\"label_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.LabelID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CreateArtistRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery35(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CreateArtistRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery35(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CreateArtistRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery35(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CreateArtistRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery35(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery36(in *jlexer.Lexer, out *CreateAlbumRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "artists_ids":
			if in.IsNull() {
				in.Skip()
				out.ArtistsIDs = nil
			} else {
				in.Delim('[')
				if out.ArtistsIDs == nil {
					if !in.IsDelim(']') {
						out.ArtistsIDs = make([]int64, 0, 8)
					} else {
						out.ArtistsIDs = []int64{}
					}
				} else {
					out.ArtistsIDs = (out.ArtistsIDs)[:0]
				}
				for !in.IsDelim(']') {
					var v40 int64
					v40 = int64(in.Int64())
					out.ArtistsIDs = append(out.ArtistsIDs, v40)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "type":
			out.Type = string(in.String())
		case "title":
			out.Title = string(in.String())
		case "image":
			if in.IsNull() {
				in.Skip()
				out.Image = nil
			} else {
				out.Image = in.Bytes()
			}
		case "tracks":
			if in.IsNull() {
				in.Skip()
				out.Tracks = nil
			} else {
				in.Delim('[')
				if out.Tracks == nil {
					if !in.IsDelim(']') {
						out.Tracks = make([]*CreateTrackRequest, 0, 8)
					} else {
						out.Tracks = []*CreateTrackRequest{}
					}
				} else {
					out.Tracks = (out.Tracks)[:0]
				}
				for !in.IsDelim(']') {
					var v42 *CreateTrackRequest
					if in.IsNull() {
						in.Skip()
						v42 = nil
					} else {
						if v42 == nil {
							v42 = new(CreateTrackRequest)
						}
						(*v42).UnmarshalEasyJSON(in)
					}
					out.Tracks = append(out.Tracks, v42)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "label_id":
			out.LabelID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery36(out *jwriter.Writer, in CreateAlbumRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"artists_ids\":"
		out.RawString(prefix[1:])
		if in.ArtistsIDs == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v43, v44 := range in.ArtistsIDs {
				if v43 > 0 {
					out.RawByte(',')
				}
				out.Int64(int64(v44))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"image\":"
		out.RawString(prefix)
		out.Base64Bytes(in.Image)
	}
	{
		const prefix string = ",\"tracks\":"
		out.RawString(prefix)
		if in.Tracks == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v47, v48 := range in.Tracks {
				if v47 > 0 {
					out.RawByte(',')
				}
				if v48 == nil {
					out.RawString("null")
				} else {
					(*v48).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"label_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.LabelID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CreateAlbumRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery36(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CreateAlbumRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery36(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CreateAlbumRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery36(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CreateAlbumRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery36(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery37(in *jlexer.Lexer, out *AvatarURL) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "avatar_url":
			out.AvatarUrl = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery37(out *jwriter.Writer, in AvatarURL) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"avatar_url\":"
		out.RawString(prefix[1:])
		out.String(string(in.AvatarUrl))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AvatarURL) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery37(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AvatarURL) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery37(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AvatarURL) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery37(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AvatarURL) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery37(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery38(in *jlexer.Lexer, out *ArtistLikeRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "value":
			out.IsLike = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery38(out *jwriter.Writer, in ArtistLikeRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"value\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.IsLike))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ArtistLikeRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery38(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ArtistLikeRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery38(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ArtistLikeRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery38(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ArtistLikeRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery38(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery39(in *jlexer.Lexer, out *ArtistFilters) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Pagination":
			if in.IsNull() {
				in.Skip()
				out.Pagination = nil
			} else {
				if out.Pagination == nil {
					out.Pagination = new(Pagination)
				}
				(*out.Pagination).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery39(out *jwriter.Writer, in ArtistFilters) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Pagination\":"
		out.RawString(prefix[1:])
		if in.Pagination == nil {
			out.RawString("null")
		} else {
			(*in.Pagination).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ArtistFilters) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery39(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ArtistFilters) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery39(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ArtistFilters) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery39(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ArtistFilters) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery39(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery40(in *jlexer.Lexer, out *ArtistDetailed) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "listeners_count":
			out.Listeners = int64(in.Int64())
		case "favorites_count":
			out.Favorites = int64(in.Int64())
		case "id":
			out.ID = int64(in.Int64())
		case "title":
			out.Title = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "thumbnail_url":
			out.Thumbnail = string(in.String())
		case "is_liked":
			out.IsLiked = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery40(out *jwriter.Writer, in ArtistDetailed) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"listeners_count\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Listeners))
	}
	{
		const prefix string = ",\"favorites_count\":"
		out.RawString(prefix)
		out.Int64(int64(in.Favorites))
	}
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix)
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"thumbnail_url\":"
		out.RawString(prefix)
		out.String(string(in.Thumbnail))
	}
	{
		const prefix string = ",\"is_liked\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsLiked))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ArtistDetailed) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery40(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ArtistDetailed) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery40(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ArtistDetailed) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery40(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ArtistDetailed) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery40(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery41(in *jlexer.Lexer, out *Artist) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		case "title":
			out.Title = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "thumbnail_url":
			out.Thumbnail = string(in.String())
		case "is_liked":
			out.IsLiked = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery41(out *jwriter.Writer, in Artist) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"thumbnail_url\":"
		out.RawString(prefix)
		out.String(string(in.Thumbnail))
	}
	{
		const prefix string = ",\"is_liked\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsLiked))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Artist) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery41(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Artist) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery41(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Artist) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery41(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Artist) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery41(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery42(in *jlexer.Lexer, out *AlbumLikeRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "value":
			out.IsLike = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery42(out *jwriter.Writer, in AlbumLikeRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"value\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.IsLike))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AlbumLikeRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery42(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlbumLikeRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery42(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlbumLikeRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery42(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlbumLikeRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery42(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery43(in *jlexer.Lexer, out *AlbumFilters) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Pagination":
			if in.IsNull() {
				in.Skip()
				out.Pagination = nil
			} else {
				if out.Pagination == nil {
					out.Pagination = new(Pagination)
				}
				(*out.Pagination).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery43(out *jwriter.Writer, in AlbumFilters) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Pagination\":"
		out.RawString(prefix[1:])
		if in.Pagination == nil {
			out.RawString("null")
		} else {
			(*in.Pagination).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AlbumFilters) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery43(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlbumFilters) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery43(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlbumFilters) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery43(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlbumFilters) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery43(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery44(in *jlexer.Lexer, out *AlbumArtist) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		case "title":
			out.Title = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery44(out *jwriter.Writer, in AlbumArtist) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AlbumArtist) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery44(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AlbumArtist) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery44(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AlbumArtist) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery44(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AlbumArtist) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery44(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery45(in *jlexer.Lexer, out *Album) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		case "title":
			out.Title = string(in.String())
		case "thumbnail_url":
			out.Thumbnail = string(in.String())
		case "artists":
			if in.IsNull() {
				in.Skip()
				out.Artists = nil
			} else {
				in.Delim('[')
				if out.Artists == nil {
					if !in.IsDelim(']') {
						out.Artists = make([]*AlbumArtist, 0, 8)
					} else {
						out.Artists = []*AlbumArtist{}
					}
				} else {
					out.Artists = (out.Artists)[:0]
				}
				for !in.IsDelim(']') {
					var v49 *AlbumArtist
					if in.IsNull() {
						in.Skip()
						v49 = nil
					} else {
						if v49 == nil {
							v49 = new(AlbumArtist)
						}
						(*v49).UnmarshalEasyJSON(in)
					}
					out.Artists = append(out.Artists, v49)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "type":
			out.Type = AlbumType(in.String())
		case "release_date":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.ReleaseDate).UnmarshalJSON(data))
			}
		case "is_liked":
			out.IsLiked = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery45(out *jwriter.Writer, in Album) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"thumbnail_url\":"
		out.RawString(prefix)
		out.String(string(in.Thumbnail))
	}
	{
		const prefix string = ",\"artists\":"
		out.RawString(prefix)
		if in.Artists == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v50, v51 := range in.Artists {
				if v50 > 0 {
					out.RawByte(',')
				}
				if v51 == nil {
					out.RawString("null")
				} else {
					(*v51).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"release_date\":"
		out.RawString(prefix)
		out.Raw((in.ReleaseDate).MarshalJSON())
	}
	{
		const prefix string = ",\"is_liked\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsLiked))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Album) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery45(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Album) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery45(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Album) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery45(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Album) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery45(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery46(in *jlexer.Lexer, out *AddTrackToPlaylistRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "track_id":
			out.TrackID = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery46(out *jwriter.Writer, in AddTrackToPlaylistRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"track_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.TrackID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AddTrackToPlaylistRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery46(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AddTrackToPlaylistRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery46(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AddTrackToPlaylistRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery46(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AddTrackToPlaylistRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery46(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery47(in *jlexer.Lexer, out *APIUnauthorizedErrorResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "status":
			out.Status = int(in.Int())
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery47(out *jwriter.Writer, in APIUnauthorizedErrorResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Status))
	}
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix)
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v APIUnauthorizedErrorResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery47(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v APIUnauthorizedErrorResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery47(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *APIUnauthorizedErrorResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery47(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *APIUnauthorizedErrorResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery47(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery48(in *jlexer.Lexer, out *APIResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "status":
			out.Status = int(in.Int())
		case "body":
			if m, ok := out.Body.(easyjson.Unmarshaler); ok {
				m.UnmarshalEasyJSON(in)
			} else if m, ok := out.Body.(json.Unmarshaler); ok {
				_ = m.UnmarshalJSON(in.Raw())
			} else {
				out.Body = in.Interface()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery48(out *jwriter.Writer, in APIResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Status))
	}
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix)
		if m, ok := in.Body.(easyjson.Marshaler); ok {
			m.MarshalEasyJSON(out)
		} else if m, ok := in.Body.(json.Marshaler); ok {
			out.Raw(m.MarshalJSON())
		} else {
			out.Raw(json.Marshal(in.Body))
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v APIResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery48(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v APIResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery48(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *APIResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery48(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *APIResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery48(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery49(in *jlexer.Lexer, out *APIRequestEntityTooLargeErrorResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "status":
			out.Status = int(in.Int())
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery49(out *jwriter.Writer, in APIRequestEntityTooLargeErrorResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Status))
	}
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix)
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v APIRequestEntityTooLargeErrorResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery49(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v APIRequestEntityTooLargeErrorResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery49(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *APIRequestEntityTooLargeErrorResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery49(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *APIRequestEntityTooLargeErrorResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery49(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery50(in *jlexer.Lexer, out *APINotFoundErrorResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "status":
			out.Status = int(in.Int())
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery50(out *jwriter.Writer, in APINotFoundErrorResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Status))
	}
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix)
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v APINotFoundErrorResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery50(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v APINotFoundErrorResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery50(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *APINotFoundErrorResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery50(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *APINotFoundErrorResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery50(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery51(in *jlexer.Lexer, out *APIInternalServerErrorResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "status":
			out.Status = int(in.Int())
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery51(out *jwriter.Writer, in APIInternalServerErrorResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Status))
	}
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix)
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v APIInternalServerErrorResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery51(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v APIInternalServerErrorResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery51(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *APIInternalServerErrorResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery51(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *APIInternalServerErrorResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery51(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery52(in *jlexer.Lexer, out *APIForbiddenErrorResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "status":
			out.Status = int(in.Int())
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery52(out *jwriter.Writer, in APIForbiddenErrorResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Status))
	}
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix)
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v APIForbiddenErrorResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery52(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v APIForbiddenErrorResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery52(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *APIForbiddenErrorResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery52(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *APIForbiddenErrorResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery52(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery53(in *jlexer.Lexer, out *APIErrorResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "status":
			out.Status = int(in.Int())
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery53(out *jwriter.Writer, in APIErrorResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Status))
	}
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix)
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v APIErrorResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery53(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v APIErrorResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery53(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *APIErrorResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery53(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *APIErrorResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery53(l, v)
}
func easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery54(in *jlexer.Lexer, out *APIBadRequestErrorResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "status":
			out.Status = int(in.Int())
		case "error":
			out.Error = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery54(out *jwriter.Writer, in APIBadRequestErrorResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Status))
	}
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix)
		out.String(string(in.Error))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v APIBadRequestErrorResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery54(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v APIBadRequestErrorResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonCea158a8EncodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery54(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *APIBadRequestErrorResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery54(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *APIBadRequestErrorResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonCea158a8DecodeGithubComGoParkMailRu20251ReturnZeroInternalPkgModelDelivery54(l, v)
}
