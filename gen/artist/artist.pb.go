// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: artist/artist.proto

package artist

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ArtistID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistID) Reset() {
	*x = ArtistID{}
	mi := &file_artist_artist_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistID) ProtoMessage() {}

func (x *ArtistID) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistID.ProtoReflect.Descriptor instead.
func (*ArtistID) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{0}
}

func (x *ArtistID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TrackID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackID) Reset() {
	*x = TrackID{}
	mi := &file_artist_artist_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackID) ProtoMessage() {}

func (x *TrackID) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackID.ProtoReflect.Descriptor instead.
func (*TrackID) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{1}
}

func (x *TrackID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AlbumID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlbumID) Reset() {
	*x = AlbumID{}
	mi := &file_artist_artist_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlbumID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumID) ProtoMessage() {}

func (x *AlbumID) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumID.ProtoReflect.Descriptor instead.
func (*AlbumID) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{2}
}

func (x *AlbumID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TrackIDList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []*TrackID             `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackIDList) Reset() {
	*x = TrackIDList{}
	mi := &file_artist_artist_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackIDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackIDList) ProtoMessage() {}

func (x *TrackIDList) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackIDList.ProtoReflect.Descriptor instead.
func (*TrackIDList) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{3}
}

func (x *TrackIDList) GetIds() []*TrackID {
	if x != nil {
		return x.Ids
	}
	return nil
}

type AlbumIDList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []*AlbumID             `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlbumIDList) Reset() {
	*x = AlbumIDList{}
	mi := &file_artist_artist_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlbumIDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumIDList) ProtoMessage() {}

func (x *AlbumIDList) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumIDList.ProtoReflect.Descriptor instead.
func (*AlbumIDList) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{4}
}

func (x *AlbumIDList) GetIds() []*AlbumID {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Artist struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Thumbnail     string                 `protobuf:"bytes,4,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Artist) Reset() {
	*x = Artist{}
	mi := &file_artist_artist_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Artist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artist) ProtoMessage() {}

func (x *Artist) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artist.ProtoReflect.Descriptor instead.
func (*Artist) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{5}
}

func (x *Artist) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Artist) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Artist) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Artist) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

type ArtistDetailed struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Artist         *Artist                `protobuf:"bytes,1,opt,name=artist,proto3" json:"artist,omitempty"`
	ListenersCount int64                  `protobuf:"varint,2,opt,name=listeners_count,json=listenersCount,proto3" json:"listeners_count,omitempty"`
	FavoritesCount int64                  `protobuf:"varint,3,opt,name=favorites_count,json=favoritesCount,proto3" json:"favorites_count,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ArtistDetailed) Reset() {
	*x = ArtistDetailed{}
	mi := &file_artist_artist_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistDetailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistDetailed) ProtoMessage() {}

func (x *ArtistDetailed) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistDetailed.ProtoReflect.Descriptor instead.
func (*ArtistDetailed) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{6}
}

func (x *ArtistDetailed) GetArtist() *Artist {
	if x != nil {
		return x.Artist
	}
	return nil
}

func (x *ArtistDetailed) GetListenersCount() int64 {
	if x != nil {
		return x.ListenersCount
	}
	return 0
}

func (x *ArtistDetailed) GetFavoritesCount() int64 {
	if x != nil {
		return x.FavoritesCount
	}
	return 0
}

type ArtistTitle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistTitle) Reset() {
	*x = ArtistTitle{}
	mi := &file_artist_artist_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistTitle) ProtoMessage() {}

func (x *ArtistTitle) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistTitle.ProtoReflect.Descriptor instead.
func (*ArtistTitle) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{7}
}

func (x *ArtistTitle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type ArtistList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artists       []*Artist              `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistList) Reset() {
	*x = ArtistList{}
	mi := &file_artist_artist_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistList) ProtoMessage() {}

func (x *ArtistList) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistList.ProtoReflect.Descriptor instead.
func (*ArtistList) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{8}
}

func (x *ArtistList) GetArtists() []*Artist {
	if x != nil {
		return x.Artists
	}
	return nil
}

type ArtistWithTitle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistWithTitle) Reset() {
	*x = ArtistWithTitle{}
	mi := &file_artist_artist_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistWithTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistWithTitle) ProtoMessage() {}

func (x *ArtistWithTitle) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistWithTitle.ProtoReflect.Descriptor instead.
func (*ArtistWithTitle) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{9}
}

func (x *ArtistWithTitle) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArtistWithTitle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type ArtistWithTitleList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artists       []*ArtistWithTitle     `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistWithTitleList) Reset() {
	*x = ArtistWithTitleList{}
	mi := &file_artist_artist_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistWithTitleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistWithTitleList) ProtoMessage() {}

func (x *ArtistWithTitleList) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistWithTitleList.ProtoReflect.Descriptor instead.
func (*ArtistWithTitleList) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{10}
}

func (x *ArtistWithTitleList) GetArtists() []*ArtistWithTitle {
	if x != nil {
		return x.Artists
	}
	return nil
}

type ArtistWithTitleMap struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Artists       map[int64]*ArtistWithTitleList `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistWithTitleMap) Reset() {
	*x = ArtistWithTitleMap{}
	mi := &file_artist_artist_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistWithTitleMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistWithTitleMap) ProtoMessage() {}

func (x *ArtistWithTitleMap) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistWithTitleMap.ProtoReflect.Descriptor instead.
func (*ArtistWithTitleMap) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{11}
}

func (x *ArtistWithTitleMap) GetArtists() map[int64]*ArtistWithTitleList {
	if x != nil {
		return x.Artists
	}
	return nil
}

type ArtistWithRole struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Role          string                 `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistWithRole) Reset() {
	*x = ArtistWithRole{}
	mi := &file_artist_artist_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistWithRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistWithRole) ProtoMessage() {}

func (x *ArtistWithRole) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistWithRole.ProtoReflect.Descriptor instead.
func (*ArtistWithRole) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{12}
}

func (x *ArtistWithRole) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArtistWithRole) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArtistWithRole) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type ArtistWithRoleList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artists       []*ArtistWithRole      `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistWithRoleList) Reset() {
	*x = ArtistWithRoleList{}
	mi := &file_artist_artist_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistWithRoleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistWithRoleList) ProtoMessage() {}

func (x *ArtistWithRoleList) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistWithRoleList.ProtoReflect.Descriptor instead.
func (*ArtistWithRoleList) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{13}
}

func (x *ArtistWithRoleList) GetArtists() []*ArtistWithRole {
	if x != nil {
		return x.Artists
	}
	return nil
}

type ArtistWithRoleMap struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Artists       map[int64]*ArtistWithRoleList `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistWithRoleMap) Reset() {
	*x = ArtistWithRoleMap{}
	mi := &file_artist_artist_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistWithRoleMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistWithRoleMap) ProtoMessage() {}

func (x *ArtistWithRoleMap) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistWithRoleMap.ProtoReflect.Descriptor instead.
func (*ArtistWithRoleMap) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{14}
}

func (x *ArtistWithRoleMap) GetArtists() map[int64]*ArtistWithRoleList {
	if x != nil {
		return x.Artists
	}
	return nil
}

type Pagination struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        int64                  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit         int64                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_artist_artist_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{15}
}

func (x *Pagination) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Pagination) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Filters struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pagination    *Pagination            `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filters) Reset() {
	*x = Filters{}
	mi := &file_artist_artist_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filters) ProtoMessage() {}

func (x *Filters) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filters.ProtoReflect.Descriptor instead.
func (*Filters) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{16}
}

func (x *Filters) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_artist_artist_proto protoreflect.FileDescriptor

const file_artist_artist_proto_rawDesc = "" +
	"\n" +
	"\x13artist/artist.proto\x12\x06artist\"\x1a\n" +
	"\bArtistID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\x19\n" +
	"\aTrackID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\x19\n" +
	"\aAlbumID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"0\n" +
	"\vTrackIDList\x12!\n" +
	"\x03ids\x18\x01 \x03(\v2\x0f.artist.TrackIDR\x03ids\"0\n" +
	"\vAlbumIDList\x12!\n" +
	"\x03ids\x18\x01 \x03(\v2\x0f.artist.AlbumIDR\x03ids\"n\n" +
	"\x06Artist\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1c\n" +
	"\tthumbnail\x18\x04 \x01(\tR\tthumbnail\"\x8a\x01\n" +
	"\x0eArtistDetailed\x12&\n" +
	"\x06artist\x18\x01 \x01(\v2\x0e.artist.ArtistR\x06artist\x12'\n" +
	"\x0flisteners_count\x18\x02 \x01(\x03R\x0elistenersCount\x12'\n" +
	"\x0ffavorites_count\x18\x03 \x01(\x03R\x0efavoritesCount\"#\n" +
	"\vArtistTitle\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\"6\n" +
	"\n" +
	"ArtistList\x12(\n" +
	"\aartists\x18\x01 \x03(\v2\x0e.artist.ArtistR\aartists\"7\n" +
	"\x0fArtistWithTitle\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\"H\n" +
	"\x13ArtistWithTitleList\x121\n" +
	"\aartists\x18\x01 \x03(\v2\x17.artist.ArtistWithTitleR\aartists\"\xb0\x01\n" +
	"\x12ArtistWithTitleMap\x12A\n" +
	"\aartists\x18\x01 \x03(\v2'.artist.ArtistWithTitleMap.ArtistsEntryR\aartists\x1aW\n" +
	"\fArtistsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.artist.ArtistWithTitleListR\x05value:\x028\x01\"J\n" +
	"\x0eArtistWithRole\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x12\n" +
	"\x04role\x18\x03 \x01(\tR\x04role\"F\n" +
	"\x12ArtistWithRoleList\x120\n" +
	"\aartists\x18\x01 \x03(\v2\x16.artist.ArtistWithRoleR\aartists\"\xad\x01\n" +
	"\x11ArtistWithRoleMap\x12@\n" +
	"\aartists\x18\x01 \x03(\v2&.artist.ArtistWithRoleMap.ArtistsEntryR\aartists\x1aV\n" +
	"\fArtistsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x120\n" +
	"\x05value\x18\x02 \x01(\v2\x1a.artist.ArtistWithRoleListR\x05value:\x028\x01\":\n" +
	"\n" +
	"Pagination\x12\x16\n" +
	"\x06offset\x18\x01 \x01(\x03R\x06offset\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x03R\x05limit\"=\n" +
	"\aFilters\x122\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2\x12.artist.PaginationR\n" +
	"pagination2\xd7\x04\n" +
	"\rArtistService\x124\n" +
	"\rGetAllArtists\x12\x0f.artist.Filters\x1a\x12.artist.ArtistList\x129\n" +
	"\rGetArtistByID\x12\x10.artist.ArtistID\x1a\x16.artist.ArtistDetailed\x12;\n" +
	"\x12GetArtistTitleByID\x12\x10.artist.ArtistID\x1a\x13.artist.ArtistTitle\x12B\n" +
	"\x13GetArtistsByTrackID\x12\x0f.artist.TrackID\x1a\x1a.artist.ArtistWithRoleList\x12F\n" +
	"\x14GetArtistsByTrackIDs\x12\x13.artist.TrackIDList\x1a\x19.artist.ArtistWithRoleMap\x12C\n" +
	"\x13GetArtistsByAlbumID\x12\x0f.artist.AlbumID\x1a\x1b.artist.ArtistWithTitleList\x12G\n" +
	"\x14GetArtistsByAlbumIDs\x12\x13.artist.AlbumIDList\x1a\x1a.artist.ArtistWithTitleMap\x12>\n" +
	"\x15GetAlbumIDsByArtistID\x12\x10.artist.ArtistID\x1a\x13.artist.AlbumIDList\x12>\n" +
	"\x15GetTrackIDsByArtistID\x12\x10.artist.ArtistID\x1a\x13.artist.TrackIDListB\n" +
	"Z\b./artistb\x06proto3"

var (
	file_artist_artist_proto_rawDescOnce sync.Once
	file_artist_artist_proto_rawDescData []byte
)

func file_artist_artist_proto_rawDescGZIP() []byte {
	file_artist_artist_proto_rawDescOnce.Do(func() {
		file_artist_artist_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_artist_artist_proto_rawDesc), len(file_artist_artist_proto_rawDesc)))
	})
	return file_artist_artist_proto_rawDescData
}

var file_artist_artist_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_artist_artist_proto_goTypes = []any{
	(*ArtistID)(nil),            // 0: artist.ArtistID
	(*TrackID)(nil),             // 1: artist.TrackID
	(*AlbumID)(nil),             // 2: artist.AlbumID
	(*TrackIDList)(nil),         // 3: artist.TrackIDList
	(*AlbumIDList)(nil),         // 4: artist.AlbumIDList
	(*Artist)(nil),              // 5: artist.Artist
	(*ArtistDetailed)(nil),      // 6: artist.ArtistDetailed
	(*ArtistTitle)(nil),         // 7: artist.ArtistTitle
	(*ArtistList)(nil),          // 8: artist.ArtistList
	(*ArtistWithTitle)(nil),     // 9: artist.ArtistWithTitle
	(*ArtistWithTitleList)(nil), // 10: artist.ArtistWithTitleList
	(*ArtistWithTitleMap)(nil),  // 11: artist.ArtistWithTitleMap
	(*ArtistWithRole)(nil),      // 12: artist.ArtistWithRole
	(*ArtistWithRoleList)(nil),  // 13: artist.ArtistWithRoleList
	(*ArtistWithRoleMap)(nil),   // 14: artist.ArtistWithRoleMap
	(*Pagination)(nil),          // 15: artist.Pagination
	(*Filters)(nil),             // 16: artist.Filters
	nil,                         // 17: artist.ArtistWithTitleMap.ArtistsEntry
	nil,                         // 18: artist.ArtistWithRoleMap.ArtistsEntry
}
var file_artist_artist_proto_depIdxs = []int32{
	1,  // 0: artist.TrackIDList.ids:type_name -> artist.TrackID
	2,  // 1: artist.AlbumIDList.ids:type_name -> artist.AlbumID
	5,  // 2: artist.ArtistDetailed.artist:type_name -> artist.Artist
	5,  // 3: artist.ArtistList.artists:type_name -> artist.Artist
	9,  // 4: artist.ArtistWithTitleList.artists:type_name -> artist.ArtistWithTitle
	17, // 5: artist.ArtistWithTitleMap.artists:type_name -> artist.ArtistWithTitleMap.ArtistsEntry
	12, // 6: artist.ArtistWithRoleList.artists:type_name -> artist.ArtistWithRole
	18, // 7: artist.ArtistWithRoleMap.artists:type_name -> artist.ArtistWithRoleMap.ArtistsEntry
	15, // 8: artist.Filters.pagination:type_name -> artist.Pagination
	10, // 9: artist.ArtistWithTitleMap.ArtistsEntry.value:type_name -> artist.ArtistWithTitleList
	13, // 10: artist.ArtistWithRoleMap.ArtistsEntry.value:type_name -> artist.ArtistWithRoleList
	16, // 11: artist.ArtistService.GetAllArtists:input_type -> artist.Filters
	0,  // 12: artist.ArtistService.GetArtistByID:input_type -> artist.ArtistID
	0,  // 13: artist.ArtistService.GetArtistTitleByID:input_type -> artist.ArtistID
	1,  // 14: artist.ArtistService.GetArtistsByTrackID:input_type -> artist.TrackID
	3,  // 15: artist.ArtistService.GetArtistsByTrackIDs:input_type -> artist.TrackIDList
	2,  // 16: artist.ArtistService.GetArtistsByAlbumID:input_type -> artist.AlbumID
	4,  // 17: artist.ArtistService.GetArtistsByAlbumIDs:input_type -> artist.AlbumIDList
	0,  // 18: artist.ArtistService.GetAlbumIDsByArtistID:input_type -> artist.ArtistID
	0,  // 19: artist.ArtistService.GetTrackIDsByArtistID:input_type -> artist.ArtistID
	8,  // 20: artist.ArtistService.GetAllArtists:output_type -> artist.ArtistList
	6,  // 21: artist.ArtistService.GetArtistByID:output_type -> artist.ArtistDetailed
	7,  // 22: artist.ArtistService.GetArtistTitleByID:output_type -> artist.ArtistTitle
	13, // 23: artist.ArtistService.GetArtistsByTrackID:output_type -> artist.ArtistWithRoleList
	14, // 24: artist.ArtistService.GetArtistsByTrackIDs:output_type -> artist.ArtistWithRoleMap
	10, // 25: artist.ArtistService.GetArtistsByAlbumID:output_type -> artist.ArtistWithTitleList
	11, // 26: artist.ArtistService.GetArtistsByAlbumIDs:output_type -> artist.ArtistWithTitleMap
	4,  // 27: artist.ArtistService.GetAlbumIDsByArtistID:output_type -> artist.AlbumIDList
	3,  // 28: artist.ArtistService.GetTrackIDsByArtistID:output_type -> artist.TrackIDList
	20, // [20:29] is the sub-list for method output_type
	11, // [11:20] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_artist_artist_proto_init() }
func file_artist_artist_proto_init() {
	if File_artist_artist_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_artist_artist_proto_rawDesc), len(file_artist_artist_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_artist_artist_proto_goTypes,
		DependencyIndexes: file_artist_artist_proto_depIdxs,
		MessageInfos:      file_artist_artist_proto_msgTypes,
	}.Build()
	File_artist_artist_proto = out.File
	file_artist_artist_proto_goTypes = nil
	file_artist_artist_proto_depIdxs = nil
}
