// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v5.29.3
// source: artist/artist.proto

package artist

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ArtistListened struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtistsListened int64 `protobuf:"varint,1,opt,name=artists_listened,json=artistsListened,proto3" json:"artists_listened,omitempty"`
}

func (x *ArtistListened) Reset() {
	*x = ArtistListened{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistListened) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistListened) ProtoMessage() {}

func (x *ArtistListened) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistListened.ProtoReflect.Descriptor instead.
func (*ArtistListened) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{0}
}

func (x *ArtistListened) GetArtistsListened() int64 {
	if x != nil {
		return x.ArtistsListened
	}
	return 0
}

type UserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserID) Reset() {
	*x = UserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserID) ProtoMessage() {}

func (x *UserID) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserID.ProtoReflect.Descriptor instead.
func (*UserID) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{1}
}

func (x *UserID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ArtistID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ArtistID) Reset() {
	*x = ArtistID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistID) ProtoMessage() {}

func (x *ArtistID) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistID.ProtoReflect.Descriptor instead.
func (*ArtistID) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{2}
}

func (x *ArtistID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ArtistIDList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*ArtistID `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ArtistIDList) Reset() {
	*x = ArtistIDList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistIDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistIDList) ProtoMessage() {}

func (x *ArtistIDList) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistIDList.ProtoReflect.Descriptor instead.
func (*ArtistIDList) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{3}
}

func (x *ArtistIDList) GetIds() []*ArtistID {
	if x != nil {
		return x.Ids
	}
	return nil
}

type TrackID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TrackID) Reset() {
	*x = TrackID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackID) ProtoMessage() {}

func (x *TrackID) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackID.ProtoReflect.Descriptor instead.
func (*TrackID) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{4}
}

func (x *TrackID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AlbumID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AlbumID) Reset() {
	*x = AlbumID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumID) ProtoMessage() {}

func (x *AlbumID) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumID.ProtoReflect.Descriptor instead.
func (*AlbumID) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{5}
}

func (x *AlbumID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TrackIDList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*TrackID `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *TrackIDList) Reset() {
	*x = TrackIDList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackIDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackIDList) ProtoMessage() {}

func (x *TrackIDList) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackIDList.ProtoReflect.Descriptor instead.
func (*TrackIDList) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{6}
}

func (x *TrackIDList) GetIds() []*TrackID {
	if x != nil {
		return x.Ids
	}
	return nil
}

type AlbumIDList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*AlbumID `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *AlbumIDList) Reset() {
	*x = AlbumIDList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumIDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumIDList) ProtoMessage() {}

func (x *AlbumIDList) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumIDList.ProtoReflect.Descriptor instead.
func (*AlbumIDList) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{7}
}

func (x *AlbumIDList) GetIds() []*AlbumID {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Artist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Thumbnail   string `protobuf:"bytes,4,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
}

func (x *Artist) Reset() {
	*x = Artist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Artist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artist) ProtoMessage() {}

func (x *Artist) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artist.ProtoReflect.Descriptor instead.
func (*Artist) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{8}
}

func (x *Artist) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Artist) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Artist) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Artist) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

type ArtistDetailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artist         *Artist `protobuf:"bytes,1,opt,name=artist,proto3" json:"artist,omitempty"`
	ListenersCount int64   `protobuf:"varint,2,opt,name=listeners_count,json=listenersCount,proto3" json:"listeners_count,omitempty"`
	FavoritesCount int64   `protobuf:"varint,3,opt,name=favorites_count,json=favoritesCount,proto3" json:"favorites_count,omitempty"`
}

func (x *ArtistDetailed) Reset() {
	*x = ArtistDetailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistDetailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistDetailed) ProtoMessage() {}

func (x *ArtistDetailed) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistDetailed.ProtoReflect.Descriptor instead.
func (*ArtistDetailed) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{9}
}

func (x *ArtistDetailed) GetArtist() *Artist {
	if x != nil {
		return x.Artist
	}
	return nil
}

func (x *ArtistDetailed) GetListenersCount() int64 {
	if x != nil {
		return x.ListenersCount
	}
	return 0
}

func (x *ArtistDetailed) GetFavoritesCount() int64 {
	if x != nil {
		return x.FavoritesCount
	}
	return 0
}

type ArtistTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ArtistTitle) Reset() {
	*x = ArtistTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistTitle) ProtoMessage() {}

func (x *ArtistTitle) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistTitle.ProtoReflect.Descriptor instead.
func (*ArtistTitle) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{10}
}

func (x *ArtistTitle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type ArtistList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artists []*Artist `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
}

func (x *ArtistList) Reset() {
	*x = ArtistList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistList) ProtoMessage() {}

func (x *ArtistList) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistList.ProtoReflect.Descriptor instead.
func (*ArtistList) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{11}
}

func (x *ArtistList) GetArtists() []*Artist {
	if x != nil {
		return x.Artists
	}
	return nil
}

type ArtistWithTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ArtistWithTitle) Reset() {
	*x = ArtistWithTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistWithTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistWithTitle) ProtoMessage() {}

func (x *ArtistWithTitle) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistWithTitle.ProtoReflect.Descriptor instead.
func (*ArtistWithTitle) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{12}
}

func (x *ArtistWithTitle) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArtistWithTitle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type ArtistWithTitleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artists []*ArtistWithTitle `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
}

func (x *ArtistWithTitleList) Reset() {
	*x = ArtistWithTitleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistWithTitleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistWithTitleList) ProtoMessage() {}

func (x *ArtistWithTitleList) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistWithTitleList.ProtoReflect.Descriptor instead.
func (*ArtistWithTitleList) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{13}
}

func (x *ArtistWithTitleList) GetArtists() []*ArtistWithTitle {
	if x != nil {
		return x.Artists
	}
	return nil
}

type ArtistWithTitleMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artists map[int64]*ArtistWithTitleList `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ArtistWithTitleMap) Reset() {
	*x = ArtistWithTitleMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistWithTitleMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistWithTitleMap) ProtoMessage() {}

func (x *ArtistWithTitleMap) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistWithTitleMap.ProtoReflect.Descriptor instead.
func (*ArtistWithTitleMap) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{14}
}

func (x *ArtistWithTitleMap) GetArtists() map[int64]*ArtistWithTitleList {
	if x != nil {
		return x.Artists
	}
	return nil
}

type ArtistWithRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Role  string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *ArtistWithRole) Reset() {
	*x = ArtistWithRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistWithRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistWithRole) ProtoMessage() {}

func (x *ArtistWithRole) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistWithRole.ProtoReflect.Descriptor instead.
func (*ArtistWithRole) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{15}
}

func (x *ArtistWithRole) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArtistWithRole) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArtistWithRole) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type ArtistWithRoleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artists []*ArtistWithRole `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
}

func (x *ArtistWithRoleList) Reset() {
	*x = ArtistWithRoleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistWithRoleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistWithRoleList) ProtoMessage() {}

func (x *ArtistWithRoleList) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistWithRoleList.ProtoReflect.Descriptor instead.
func (*ArtistWithRoleList) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{16}
}

func (x *ArtistWithRoleList) GetArtists() []*ArtistWithRole {
	if x != nil {
		return x.Artists
	}
	return nil
}

type ArtistWithRoleMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artists map[int64]*ArtistWithRoleList `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ArtistWithRoleMap) Reset() {
	*x = ArtistWithRoleMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistWithRoleMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistWithRoleMap) ProtoMessage() {}

func (x *ArtistWithRoleMap) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistWithRoleMap.ProtoReflect.Descriptor instead.
func (*ArtistWithRoleMap) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{17}
}

func (x *ArtistWithRoleMap) GetArtists() map[int64]*ArtistWithRoleList {
	if x != nil {
		return x.Artists
	}
	return nil
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{18}
}

func (x *Pagination) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Pagination) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Filters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *Filters) Reset() {
	*x = Filters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filters) ProtoMessage() {}

func (x *Filters) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filters.ProtoReflect.Descriptor instead.
func (*Filters) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{19}
}

func (x *Filters) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ArtistStreamCreateDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtistIds *ArtistIDList `protobuf:"bytes,1,opt,name=artist_ids,json=artistIds,proto3" json:"artist_ids,omitempty"`
	UserId    *UserID       `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ArtistStreamCreateDataList) Reset() {
	*x = ArtistStreamCreateDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artist_artist_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArtistStreamCreateDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistStreamCreateDataList) ProtoMessage() {}

func (x *ArtistStreamCreateDataList) ProtoReflect() protoreflect.Message {
	mi := &file_artist_artist_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistStreamCreateDataList.ProtoReflect.Descriptor instead.
func (*ArtistStreamCreateDataList) Descriptor() ([]byte, []int) {
	return file_artist_artist_proto_rawDescGZIP(), []int{20}
}

func (x *ArtistStreamCreateDataList) GetArtistIds() *ArtistIDList {
	if x != nil {
		return x.ArtistIds
	}
	return nil
}

func (x *ArtistStreamCreateDataList) GetUserId() *UserID {
	if x != nil {
		return x.UserId
	}
	return nil
}

var File_artist_artist_proto protoreflect.FileDescriptor

var file_artist_artist_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x0e, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x22, 0x18, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x1a, 0x0a, 0x08, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x44, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a,
	0x0c, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x44, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x19, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x07,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x49, 0x44, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x30, 0x0a, 0x0b, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x6e, 0x0a, 0x06, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x22, 0x8a, 0x01, 0x0a, 0x0e,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x26,
	0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x06,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x23, 0x0a, 0x0b, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x36, 0x0a,
	0x0a, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x61,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x07, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x73, 0x22, 0x37, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x48,
	0x0a, 0x13, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52,
	0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x12,
	0x41, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x73, 0x1a, 0x57, 0x0a, 0x0c, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4a, 0x0a, 0x0e, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x46, 0x0a, 0x12, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x22,
	0xad, 0x01, 0x0a, 0x11, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x40, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61,
	0x70, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x1a, 0x56, 0x0a, 0x0c, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x3a, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x3d, 0x0a, 0x07, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7a, 0x0a, 0x1a, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x44, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x27, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x32, 0xf5, 0x05, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x12, 0x0f, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x12, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x10, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49,
	0x44, 0x1a, 0x16, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x10, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49,
	0x44, 0x1a, 0x13, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73,
	0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x42, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x0f, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x1a, 0x1a,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49,
	0x44, 0x73, 0x12, 0x13, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x4d,
	0x61, 0x70, 0x12, 0x43, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x73,
	0x42, 0x79, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44, 0x12, 0x0f, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44, 0x1a, 0x1b, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44, 0x73, 0x12,
	0x13, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4d, 0x61, 0x70,
	0x12, 0x3e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44, 0x73, 0x42,
	0x79, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x44, 0x12, 0x10, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x44, 0x1a, 0x13, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x3e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x73, 0x42,
	0x79, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x44, 0x12, 0x10, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x44, 0x1a, 0x13, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x56, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x42, 0x79, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x44, 0x73, 0x12, 0x22, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41,
	0x72, 0x74, 0x69, 0x73, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x42, 0x0a,
	0x5a, 0x08, 0x2e, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_artist_artist_proto_rawDescOnce sync.Once
	file_artist_artist_proto_rawDescData = file_artist_artist_proto_rawDesc
)

func file_artist_artist_proto_rawDescGZIP() []byte {
	file_artist_artist_proto_rawDescOnce.Do(func() {
		file_artist_artist_proto_rawDescData = protoimpl.X.CompressGZIP(file_artist_artist_proto_rawDescData)
	})
	return file_artist_artist_proto_rawDescData
}

var file_artist_artist_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_artist_artist_proto_goTypes = []interface{}{
	(*ArtistListened)(nil),             // 0: artist.ArtistListened
	(*UserID)(nil),                     // 1: artist.UserID
	(*ArtistID)(nil),                   // 2: artist.ArtistID
	(*ArtistIDList)(nil),               // 3: artist.ArtistIDList
	(*TrackID)(nil),                    // 4: artist.TrackID
	(*AlbumID)(nil),                    // 5: artist.AlbumID
	(*TrackIDList)(nil),                // 6: artist.TrackIDList
	(*AlbumIDList)(nil),                // 7: artist.AlbumIDList
	(*Artist)(nil),                     // 8: artist.Artist
	(*ArtistDetailed)(nil),             // 9: artist.ArtistDetailed
	(*ArtistTitle)(nil),                // 10: artist.ArtistTitle
	(*ArtistList)(nil),                 // 11: artist.ArtistList
	(*ArtistWithTitle)(nil),            // 12: artist.ArtistWithTitle
	(*ArtistWithTitleList)(nil),        // 13: artist.ArtistWithTitleList
	(*ArtistWithTitleMap)(nil),         // 14: artist.ArtistWithTitleMap
	(*ArtistWithRole)(nil),             // 15: artist.ArtistWithRole
	(*ArtistWithRoleList)(nil),         // 16: artist.ArtistWithRoleList
	(*ArtistWithRoleMap)(nil),          // 17: artist.ArtistWithRoleMap
	(*Pagination)(nil),                 // 18: artist.Pagination
	(*Filters)(nil),                    // 19: artist.Filters
	(*ArtistStreamCreateDataList)(nil), // 20: artist.ArtistStreamCreateDataList
	nil,                                // 21: artist.ArtistWithTitleMap.ArtistsEntry
	nil,                                // 22: artist.ArtistWithRoleMap.ArtistsEntry
	(*emptypb.Empty)(nil),              // 23: google.protobuf.Empty
}
var file_artist_artist_proto_depIdxs = []int32{
	2,  // 0: artist.ArtistIDList.ids:type_name -> artist.ArtistID
	4,  // 1: artist.TrackIDList.ids:type_name -> artist.TrackID
	5,  // 2: artist.AlbumIDList.ids:type_name -> artist.AlbumID
	8,  // 3: artist.ArtistDetailed.artist:type_name -> artist.Artist
	8,  // 4: artist.ArtistList.artists:type_name -> artist.Artist
	12, // 5: artist.ArtistWithTitleList.artists:type_name -> artist.ArtistWithTitle
	21, // 6: artist.ArtistWithTitleMap.artists:type_name -> artist.ArtistWithTitleMap.ArtistsEntry
	15, // 7: artist.ArtistWithRoleList.artists:type_name -> artist.ArtistWithRole
	22, // 8: artist.ArtistWithRoleMap.artists:type_name -> artist.ArtistWithRoleMap.ArtistsEntry
	18, // 9: artist.Filters.pagination:type_name -> artist.Pagination
	3,  // 10: artist.ArtistStreamCreateDataList.artist_ids:type_name -> artist.ArtistIDList
	1,  // 11: artist.ArtistStreamCreateDataList.user_id:type_name -> artist.UserID
	13, // 12: artist.ArtistWithTitleMap.ArtistsEntry.value:type_name -> artist.ArtistWithTitleList
	16, // 13: artist.ArtistWithRoleMap.ArtistsEntry.value:type_name -> artist.ArtistWithRoleList
	19, // 14: artist.ArtistService.GetAllArtists:input_type -> artist.Filters
	2,  // 15: artist.ArtistService.GetArtistByID:input_type -> artist.ArtistID
	2,  // 16: artist.ArtistService.GetArtistTitleByID:input_type -> artist.ArtistID
	4,  // 17: artist.ArtistService.GetArtistsByTrackID:input_type -> artist.TrackID
	6,  // 18: artist.ArtistService.GetArtistsByTrackIDs:input_type -> artist.TrackIDList
	5,  // 19: artist.ArtistService.GetArtistsByAlbumID:input_type -> artist.AlbumID
	7,  // 20: artist.ArtistService.GetArtistsByAlbumIDs:input_type -> artist.AlbumIDList
	2,  // 21: artist.ArtistService.GetAlbumIDsByArtistID:input_type -> artist.ArtistID
	2,  // 22: artist.ArtistService.GetTrackIDsByArtistID:input_type -> artist.ArtistID
	20, // 23: artist.ArtistService.CreateStreamsByArtistIDs:input_type -> artist.ArtistStreamCreateDataList
	1,  // 24: artist.ArtistService.GetArtistsListenedByUserID:input_type -> artist.UserID
	11, // 25: artist.ArtistService.GetAllArtists:output_type -> artist.ArtistList
	9,  // 26: artist.ArtistService.GetArtistByID:output_type -> artist.ArtistDetailed
	10, // 27: artist.ArtistService.GetArtistTitleByID:output_type -> artist.ArtistTitle
	16, // 28: artist.ArtistService.GetArtistsByTrackID:output_type -> artist.ArtistWithRoleList
	17, // 29: artist.ArtistService.GetArtistsByTrackIDs:output_type -> artist.ArtistWithRoleMap
	13, // 30: artist.ArtistService.GetArtistsByAlbumID:output_type -> artist.ArtistWithTitleList
	14, // 31: artist.ArtistService.GetArtistsByAlbumIDs:output_type -> artist.ArtistWithTitleMap
	7,  // 32: artist.ArtistService.GetAlbumIDsByArtistID:output_type -> artist.AlbumIDList
	6,  // 33: artist.ArtistService.GetTrackIDsByArtistID:output_type -> artist.TrackIDList
	23, // 34: artist.ArtistService.CreateStreamsByArtistIDs:output_type -> google.protobuf.Empty
	0,  // 35: artist.ArtistService.GetArtistsListenedByUserID:output_type -> artist.ArtistListened
	25, // [25:36] is the sub-list for method output_type
	14, // [14:25] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_artist_artist_proto_init() }
func file_artist_artist_proto_init() {
	if File_artist_artist_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_artist_artist_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistListened); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistIDList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackIDList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumIDList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Artist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistDetailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistWithTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistWithTitleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistWithTitleMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistWithRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistWithRoleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistWithRoleMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artist_artist_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArtistStreamCreateDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_artist_artist_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_artist_artist_proto_goTypes,
		DependencyIndexes: file_artist_artist_proto_depIdxs,
		MessageInfos:      file_artist_artist_proto_msgTypes,
	}.Build()
	File_artist_artist_proto = out.File
	file_artist_artist_proto_rawDesc = nil
	file_artist_artist_proto_goTypes = nil
	file_artist_artist_proto_depIdxs = nil
}
