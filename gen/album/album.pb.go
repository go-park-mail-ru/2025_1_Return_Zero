// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v5.29.3
// source: album/album.proto

package album

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AlbumType int32

const (
	AlbumType_AlbumTypeAlbum       AlbumType = 0
	AlbumType_AlbumTypeEP          AlbumType = 1
	AlbumType_AlbumTypeSingle      AlbumType = 2
	AlbumType_AlbumTypeCompilation AlbumType = 3
)

// Enum value maps for AlbumType.
var (
	AlbumType_name = map[int32]string{
		0: "AlbumTypeAlbum",
		1: "AlbumTypeEP",
		2: "AlbumTypeSingle",
		3: "AlbumTypeCompilation",
	}
	AlbumType_value = map[string]int32{
		"AlbumTypeAlbum":       0,
		"AlbumTypeEP":          1,
		"AlbumTypeSingle":      2,
		"AlbumTypeCompilation": 3,
	}
)

func (x AlbumType) Enum() *AlbumType {
	p := new(AlbumType)
	*p = x
	return p
}

func (x AlbumType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlbumType) Descriptor() protoreflect.EnumDescriptor {
	return file_album_album_proto_enumTypes[0].Descriptor()
}

func (AlbumType) Type() protoreflect.EnumType {
	return &file_album_album_proto_enumTypes[0]
}

func (x AlbumType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlbumType.Descriptor instead.
func (AlbumType) EnumDescriptor() ([]byte, []int) {
	return file_album_album_proto_rawDescGZIP(), []int{0}
}

type UserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserID) Reset() {
	*x = UserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_album_album_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserID) ProtoMessage() {}

func (x *UserID) ProtoReflect() protoreflect.Message {
	mi := &file_album_album_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserID.ProtoReflect.Descriptor instead.
func (*UserID) Descriptor() ([]byte, []int) {
	return file_album_album_proto_rawDescGZIP(), []int{0}
}

func (x *UserID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AlbumID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AlbumID) Reset() {
	*x = AlbumID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_album_album_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumID) ProtoMessage() {}

func (x *AlbumID) ProtoReflect() protoreflect.Message {
	mi := &file_album_album_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumID.ProtoReflect.Descriptor instead.
func (*AlbumID) Descriptor() ([]byte, []int) {
	return file_album_album_proto_rawDescGZIP(), []int{1}
}

func (x *AlbumID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AlbumIDList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*AlbumID `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *AlbumIDList) Reset() {
	*x = AlbumIDList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_album_album_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumIDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumIDList) ProtoMessage() {}

func (x *AlbumIDList) ProtoReflect() protoreflect.Message {
	mi := &file_album_album_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumIDList.ProtoReflect.Descriptor instead.
func (*AlbumIDList) Descriptor() ([]byte, []int) {
	return file_album_album_proto_rawDescGZIP(), []int{2}
}

func (x *AlbumIDList) GetIds() []*AlbumID {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Album struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type        AlbumType              `protobuf:"varint,3,opt,name=type,proto3,enum=album.AlbumType" json:"type,omitempty"`
	Thumbnail   string                 `protobuf:"bytes,4,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	ReleaseDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
}

func (x *Album) Reset() {
	*x = Album{}
	if protoimpl.UnsafeEnabled {
		mi := &file_album_album_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Album) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Album) ProtoMessage() {}

func (x *Album) ProtoReflect() protoreflect.Message {
	mi := &file_album_album_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Album.ProtoReflect.Descriptor instead.
func (*Album) Descriptor() ([]byte, []int) {
	return file_album_album_proto_rawDescGZIP(), []int{3}
}

func (x *Album) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Album) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Album) GetType() AlbumType {
	if x != nil {
		return x.Type
	}
	return AlbumType_AlbumTypeAlbum
}

func (x *Album) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *Album) GetReleaseDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

type AlbumList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums []*Album `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
}

func (x *AlbumList) Reset() {
	*x = AlbumList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_album_album_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumList) ProtoMessage() {}

func (x *AlbumList) ProtoReflect() protoreflect.Message {
	mi := &file_album_album_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumList.ProtoReflect.Descriptor instead.
func (*AlbumList) Descriptor() ([]byte, []int) {
	return file_album_album_proto_rawDescGZIP(), []int{4}
}

func (x *AlbumList) GetAlbums() []*Album {
	if x != nil {
		return x.Albums
	}
	return nil
}

type AlbumTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *AlbumTitle) Reset() {
	*x = AlbumTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_album_album_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumTitle) ProtoMessage() {}

func (x *AlbumTitle) ProtoReflect() protoreflect.Message {
	mi := &file_album_album_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumTitle.ProtoReflect.Descriptor instead.
func (*AlbumTitle) Descriptor() ([]byte, []int) {
	return file_album_album_proto_rawDescGZIP(), []int{5}
}

func (x *AlbumTitle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type AlbumTitleMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Titles map[int64]*AlbumTitle `protobuf:"bytes,1,rep,name=titles,proto3" json:"titles,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AlbumTitleMap) Reset() {
	*x = AlbumTitleMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_album_album_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumTitleMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumTitleMap) ProtoMessage() {}

func (x *AlbumTitleMap) ProtoReflect() protoreflect.Message {
	mi := &file_album_album_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumTitleMap.ProtoReflect.Descriptor instead.
func (*AlbumTitleMap) Descriptor() ([]byte, []int) {
	return file_album_album_proto_rawDescGZIP(), []int{6}
}

func (x *AlbumTitleMap) GetTitles() map[int64]*AlbumTitle {
	if x != nil {
		return x.Titles
	}
	return nil
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_album_album_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_album_album_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_album_album_proto_rawDescGZIP(), []int{7}
}

func (x *Pagination) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Pagination) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Filters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *Filters) Reset() {
	*x = Filters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_album_album_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filters) ProtoMessage() {}

func (x *Filters) ProtoReflect() protoreflect.Message {
	mi := &file_album_album_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filters.ProtoReflect.Descriptor instead.
func (*Filters) Descriptor() ([]byte, []int) {
	return file_album_album_proto_rawDescGZIP(), []int{8}
}

func (x *Filters) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AlbumStreamCreateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumId *AlbumID `protobuf:"bytes,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	UserId  *UserID  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AlbumStreamCreateData) Reset() {
	*x = AlbumStreamCreateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_album_album_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlbumStreamCreateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumStreamCreateData) ProtoMessage() {}

func (x *AlbumStreamCreateData) ProtoReflect() protoreflect.Message {
	mi := &file_album_album_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumStreamCreateData.ProtoReflect.Descriptor instead.
func (*AlbumStreamCreateData) Descriptor() ([]byte, []int) {
	return file_album_album_proto_rawDescGZIP(), []int{9}
}

func (x *AlbumStreamCreateData) GetAlbumId() *AlbumID {
	if x != nil {
		return x.AlbumId
	}
	return nil
}

func (x *AlbumStreamCreateData) GetUserId() *UserID {
	if x != nil {
		return x.UserId
	}
	return nil
}

var File_album_album_proto protoreflect.FileDescriptor

var file_album_album_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x2f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x18, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x19, 0x0a, 0x07, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a,
	0x0b, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x6c, 0x62, 0x75,
	0x6d, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xb0,
	0x01, 0x0a, 0x05, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x22, 0x31, 0x0a, 0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x06, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x73, 0x22, 0x22, 0x0a, 0x0a, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x0d, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x38, 0x0a, 0x06, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4d, 0x61, 0x70,
	0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x73, 0x1a, 0x4c, 0x0a, 0x0b, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x3a, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x3c,
	0x0a, 0x07, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x15,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x2e,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x2a, 0x5f, 0x0a, 0x09, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x45, 0x50, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x10, 0x02, 0x12,
	0x18, 0x0a, 0x14, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x32, 0xe4, 0x02, 0x0a, 0x0c, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x0e, 0x2e, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x10, 0x2e, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x42, 0x79, 0x49, 0x44, 0x12, 0x0e, 0x2e, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44, 0x1a, 0x0c, 0x2e, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x36, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x0e, 0x2e, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44, 0x1a,
	0x11, 0x2e, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0x12, 0x2e, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4d,
	0x61, 0x70, 0x12, 0x36, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x42,
	0x79, 0x49, 0x44, 0x73, 0x12, 0x12, 0x2e, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x2e, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x61, 0x6c, 0x62, 0x75, 0x6d,
	0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x2e, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_album_album_proto_rawDescOnce sync.Once
	file_album_album_proto_rawDescData = file_album_album_proto_rawDesc
)

func file_album_album_proto_rawDescGZIP() []byte {
	file_album_album_proto_rawDescOnce.Do(func() {
		file_album_album_proto_rawDescData = protoimpl.X.CompressGZIP(file_album_album_proto_rawDescData)
	})
	return file_album_album_proto_rawDescData
}

var file_album_album_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_album_album_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_album_album_proto_goTypes = []interface{}{
	(AlbumType)(0),                // 0: album.AlbumType
	(*UserID)(nil),                // 1: album.UserID
	(*AlbumID)(nil),               // 2: album.AlbumID
	(*AlbumIDList)(nil),           // 3: album.AlbumIDList
	(*Album)(nil),                 // 4: album.Album
	(*AlbumList)(nil),             // 5: album.AlbumList
	(*AlbumTitle)(nil),            // 6: album.AlbumTitle
	(*AlbumTitleMap)(nil),         // 7: album.AlbumTitleMap
	(*Pagination)(nil),            // 8: album.Pagination
	(*Filters)(nil),               // 9: album.Filters
	(*AlbumStreamCreateData)(nil), // 10: album.AlbumStreamCreateData
	nil,                           // 11: album.AlbumTitleMap.TitlesEntry
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 13: google.protobuf.Empty
}
var file_album_album_proto_depIdxs = []int32{
	2,  // 0: album.AlbumIDList.ids:type_name -> album.AlbumID
	0,  // 1: album.Album.type:type_name -> album.AlbumType
	12, // 2: album.Album.release_date:type_name -> google.protobuf.Timestamp
	4,  // 3: album.AlbumList.albums:type_name -> album.Album
	11, // 4: album.AlbumTitleMap.titles:type_name -> album.AlbumTitleMap.TitlesEntry
	8,  // 5: album.Filters.pagination:type_name -> album.Pagination
	2,  // 6: album.AlbumStreamCreateData.album_id:type_name -> album.AlbumID
	1,  // 7: album.AlbumStreamCreateData.user_id:type_name -> album.UserID
	6,  // 8: album.AlbumTitleMap.TitlesEntry.value:type_name -> album.AlbumTitle
	9,  // 9: album.AlbumService.GetAllAlbums:input_type -> album.Filters
	2,  // 10: album.AlbumService.GetAlbumByID:input_type -> album.AlbumID
	2,  // 11: album.AlbumService.GetAlbumTitleByID:input_type -> album.AlbumID
	3,  // 12: album.AlbumService.GetAlbumTitleByIDs:input_type -> album.AlbumIDList
	3,  // 13: album.AlbumService.GetAlbumsByIDs:input_type -> album.AlbumIDList
	10, // 14: album.AlbumService.CreateStream:input_type -> album.AlbumStreamCreateData
	5,  // 15: album.AlbumService.GetAllAlbums:output_type -> album.AlbumList
	4,  // 16: album.AlbumService.GetAlbumByID:output_type -> album.Album
	6,  // 17: album.AlbumService.GetAlbumTitleByID:output_type -> album.AlbumTitle
	7,  // 18: album.AlbumService.GetAlbumTitleByIDs:output_type -> album.AlbumTitleMap
	5,  // 19: album.AlbumService.GetAlbumsByIDs:output_type -> album.AlbumList
	13, // 20: album.AlbumService.CreateStream:output_type -> google.protobuf.Empty
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_album_album_proto_init() }
func file_album_album_proto_init() {
	if File_album_album_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_album_album_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_album_album_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_album_album_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumIDList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_album_album_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Album); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_album_album_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_album_album_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_album_album_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumTitleMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_album_album_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_album_album_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_album_album_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlbumStreamCreateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_album_album_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_album_album_proto_goTypes,
		DependencyIndexes: file_album_album_proto_depIdxs,
		EnumInfos:         file_album_album_proto_enumTypes,
		MessageInfos:      file_album_album_proto_msgTypes,
	}.Build()
	File_album_album_proto = out.File
	file_album_album_proto_rawDesc = nil
	file_album_album_proto_goTypes = nil
	file_album_album_proto_depIdxs = nil
}
